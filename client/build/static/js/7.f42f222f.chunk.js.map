{"version":3,"sources":["Components/UI/Sidebar/Sidebar.js","Components/Pages/Store/Clinics/Appointments/EachAppointment/EachAppointment.js","Components/Pages/Store/Clinics/Appointments/Appointments.js","Components/Pages/Store/Clinics/EachClinic/EachClinic.js","Components/Pages/Store/Clinics/Clinics.js","Components/Pages/Store/Store.js"],"names":["withRouter","props","useState","checked","setChecked","location","pathname","useEffect","window","onscroll","document","getElementById","undefined","body","scrollTop","documentElement","style","padding","width","$","ready","prev","on","e","preventDefault","this","parent","find","slideToggle","moveMarker","activeNav","totalWidth","parseFloat","css","precedingAnchorWidth","a","aWidth","aPadLeft","aPadRight","anchorWidths","each","index","elem","hasClass","anchorWidthCounter","activeMarker","click","removeClass","parents","addClass","href","goto","event","to","history","push","toggle","className","id","heading","type","onClick","showOnMobile","htmlFor","routes","map","el","dropdown","options","some","includes","key","ele","ind","name","component","visibility","EachAppointment","MyCard","textAlign","marginTop","paddingBottom","clinicName","doctorName","workingHours","Appointments","require","getDistrictsByStateId","loading","setLoading","error","date","clinics","setClinics","axiosInstance","post","then","res","console","log","data","catch","err","Spinner","length","EachClinic","description","seatsAvailable","professor","AsyncButton","margin","Clinics","college","setCollege","courses","setCourses","show","setShow","useSelector","state","login","colleges","setColleges","get","getCourses","afterFilter","registeredCourses","onChange","value","collegeId","placeholder","connect","auth","logo","Sidebar","background","initialActive","src","alt","path","PageShell"],"mappings":"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","file":"static/js/7.f42f222f.chunk.js","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { withRouter } from \"react-router\";\r\n// import {\r\n//   Collapse,\r\n//   Navbar,\r\n//   NavbarToggler,\r\n//   NavbarBrand,\r\n//   Nav,\r\n//   NavItem,\r\n//   NavLink,\r\n// } from \"reactstrap\";\r\n\r\n// const Sidebar = (props) => {\r\n//   const [collapsed, setCollapsed] = useState(true);\r\n\r\n//   const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n//   const goto = (event, to) => {\r\n//     event.preventDefault();\r\n//     props.history.push(to);\r\n//     toggleNavbar();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={props.style}>\r\n//       <Navbar color=\"faded\" light style={props.style}>\r\n//         <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n//           {props.heading}\r\n//         </NavbarBrand>\r\n//         <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n//         <Collapse isOpen={!collapsed} navbar>\r\n//           <Nav navbar>\r\n//             <br />\r\n//             {props.routes.map((el, index) => (\r\n//               <NavItem key={index}>\r\n//                 <NavLink href=\"#\" onClick={(event) => goto(event, el.to)}>\r\n//                   <p className=\"bold large\">{el.name}</p>\r\n//                 </NavLink>\r\n//               </NavItem>\r\n//             ))}\r\n//           </Nav>\r\n//         </Collapse>\r\n//       </Navbar>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default withRouter(Sidebar);\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport $ from \"jquery\";\r\n\r\nconst Sidebar = (props) => {\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeRoute, setActiveRoute] = useState(props.location.pathname);\r\n\r\n  useEffect(() => {\r\n    // if (\r\n    //   props.location.pathname !== undefined &&\r\n    //   props.location.pathname !== null\r\n    // ) {\r\n    //   setActiveRoute(props.location.pathname);\r\n    // } else {\r\n    //   setActiveRoute(\"\");\r\n    // }\r\n\r\n    window.onscroll = function () {\r\n      scrollFunction();\r\n    };\r\n\r\n    function scrollFunction() {\r\n      if (\r\n        document.getElementById(\"navbar\") !== null &&\r\n        document.getElementById(\"navbar\") !== undefined\r\n      ) {\r\n        if (\r\n          document.body.scrollTop > 10 ||\r\n          document.documentElement.scrollTop > 10\r\n        ) {\r\n          document.getElementById(\"navbar\").style.padding = \"0px 20px\";\r\n          document.getElementById(\"navbar\").style.width = \"100vw\";\r\n        } else {\r\n          document.getElementById(\"navbar\").style.padding = \"10px 20px\";\r\n          document.getElementById(\"navbar\").style.width = \"95vw\";\r\n        }\r\n      }\r\n    }\r\n    $(document).ready(function () {\r\n      $(\".nav .dropdown-menu\")\r\n        .prev(\"a\")\r\n        .on(\"click\", function (e) {\r\n          e.preventDefault();\r\n          $(this).parent().find(\".dropdown-menu\").slideToggle();\r\n        });\r\n    });\r\n\r\n    $(document).ready(function () {\r\n      function moveMarker() {\r\n        var activeNav = $(\".active-route a\");\r\n        var activewidth = $(activeNav).width();\r\n        var activePadLeft = parseFloat($(activeNav).css(\"padding-left\"));\r\n        var activePadRight = parseFloat($(activeNav).css(\"padding-right\"));\r\n        var totalWidth = activewidth + activePadLeft + activePadRight;\r\n\r\n        var precedingAnchorWidth = anchorWidthCounter();\r\n\r\n        // TODO:\r\n        // Find the total widths of all of the anchors\r\n        // to the left of the active anchor.\r\n        var activeMarker = $(\".active-marker\");\r\n        if ($(\".active-route a\").hasClass(\".hide-marker\")) {\r\n          $(activeMarker).css(\"display\", \"none\");\r\n          $(activeMarker).css(\"left\", precedingAnchorWidth + 40);\r\n        } else {\r\n          $(activeMarker).css(\"display\", \"block\");\r\n\r\n          $(activeMarker).css(\"width\", totalWidth);\r\n\r\n          $(activeMarker).css(\"left\", precedingAnchorWidth + 40);\r\n        }\r\n\r\n        // TODO:\r\n        // Using the calculated total widths of preceding anchors,\r\n        // Set the left: css value to that number.\r\n      }\r\n      moveMarker();\r\n\r\n      function anchorWidthCounter() {\r\n        var anchorWidths = 0;\r\n        var a;\r\n        var aWidth;\r\n        var aPadLeft;\r\n        var aPadRight;\r\n        var aTotalWidth;\r\n        $(\".nav-links li\").each(function (index, elem) {\r\n          var activeTest = $(elem).hasClass(\"active-route\");\r\n          if (activeTest) {\r\n            // Break out of the each function.\r\n            return false;\r\n          }\r\n\r\n          a = $(elem).find(\"a\");\r\n          aWidth = a.width();\r\n          aPadLeft = parseFloat(a.css(\"padding-left\"));\r\n          aPadRight = parseFloat(a.css(\"padding-right\"));\r\n          aTotalWidth = aWidth + aPadLeft + aPadRight;\r\n\r\n          anchorWidths = anchorWidths + aTotalWidth;\r\n        });\r\n\r\n        return anchorWidths;\r\n      }\r\n\r\n      $(\".nav-links a\").click(function (e) {\r\n        e.preventDefault();\r\n        $(\".nav-links li\").removeClass(\"active-route\");\r\n        $(this).parents(\"li\").addClass(\"active-route\");\r\n        moveMarker();\r\n      });\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"hello\");\r\n  // }, []);\r\n\r\n  const goto = (event, to) => {\r\n    event.preventDefault();\r\n    props.history.push(to);\r\n    toggle();\r\n  };\r\n\r\n  const toggle = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar blurred-nav\" id=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <div className=\"nav-header\">\r\n            <div className=\"logo\">\r\n              {/* <a href=\"#\">Furkan Giray</a> */}\r\n              {props.heading}\r\n            </div>\r\n          </div>\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            id=\"menu-toggle\"\r\n            onClick={toggle}\r\n          />\r\n          {props.showOnMobile ? (\r\n            <div className=\"show-on-mobile\">{props.showOnMobile}</div>\r\n          ) : null}\r\n          <label htmlFor=\"menu-toggle\" className=\"menu-show\">\r\n            <i className=\"fa fa-bars\"></i>\r\n          </label>\r\n\r\n          <div className=\"nav\">\r\n            <ul className=\"nav-links\">\r\n              {props.routes.map((el, index) =>\r\n                el.dropdown ? (\r\n                  <li\r\n                    className={\r\n                      \"nav-item has-dropdown indicate-active drop\" +\r\n                      (el.dropdown.options.some((elem) =>\r\n                        window.location.href.includes(elem.to)\r\n                      )\r\n                        ? \" active-route\"\r\n                        : // : activeRoute === \"\"\r\n                          // ? el.initialActive\r\n                          //   ? \" active-route\"\r\n                          //   : \"\"\r\n                          \"\")\r\n                      // (el.dropdown.options.some(\r\n                      //   (elem) => elem.to === activeRoute\r\n                      // )\r\n                      //   ? \" active-route\"\r\n                      //   : activeRoute === \"\"\r\n                      //   ? el.initialActive\r\n                      //     ? \" active-route\"\r\n                      //     : \"\"\r\n                      //   : \"\")\r\n                      // (el.initialActive ? \" active-route\" : \"\")\r\n                    }\r\n                    key={index}\r\n                  >\r\n                    <a href=\"#\" className=\"nav-link\">\r\n                      {el.dropdown.heading}\r\n                    </a>\r\n                    <ul className=\"dropdown-menu\">\r\n                      {el.dropdown.options.map((ele, ind) => (\r\n                        <li className=\"nav-item\" key={ind}>\r\n                          <a\r\n                            className=\"nav-link font\"\r\n                            href=\"#\"\r\n                            onClick={(event) => goto(event, ele.to)}\r\n                          >\r\n                            {ele.name}\r\n                          </a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </li>\r\n                ) : el.component ? (\r\n                  <li\r\n                    className={\r\n                      \"nav-item nav-component indicate-active\" +\r\n                      (window.location.href.includes(el.to)\r\n                        ? \" active-route\"\r\n                        : \"\")\r\n                      // (el.initialActive ? \" active-route\" : \"\")\r\n                    }\r\n                    key={index}\r\n                    onClick={(event) => goto(event, el.to)}\r\n                  >\r\n                    <a\r\n                      style={{ visibility: \"hidden\" }}\r\n                      className=\"hide-marker\"\r\n                    ></a>\r\n                    {el.component}\r\n                  </li>\r\n                ) : (\r\n                  <li\r\n                    className={\r\n                      \"nav-item indicate-active\" +\r\n                      (window.location.href.includes(el.to)\r\n                        ? \" active-route\"\r\n                        : \"\")\r\n                      // (activeRoute === el.to\r\n                      //   ? \" active-route\"\r\n                      //   : activeRoute === \"\"\r\n                      //   ? el.initialActive\r\n                      //     ? \" active-route\"\r\n                      //     : \"\"\r\n                      //   : \"\")\r\n                    }\r\n                    key={index}\r\n                  >\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(event) => goto(event, el.to)}\r\n                      className=\"nav-link font\"\r\n                    >\r\n                      {el.name}\r\n                    </a>\r\n                  </li>\r\n                )\r\n              )}\r\n\r\n              <label htmlFor=\"menu-toggle\" className=\"menu-hide\">\r\n                <i className=\"fa fa-times\"></i>\r\n              </label>\r\n            </ul>\r\n            <i className=\"active-marker drop\"></i>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div className=\"dummy-div\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React from \"react\";\r\nimport MyCard from \"../../../../../UI/MyCard/MyCard\";\r\nimport \"./EachAppointment.css\";\r\n\r\nconst EachAppointment = (props) => {\r\n  return (\r\n    <MyCard\r\n      className=\"each-user-clinic hover-grow pointer\"\r\n      style={{ textAlign: \"left\", marginTop: 20, paddingBottom: 20 }}\r\n    >\r\n      <strong>{props.clinicName}</strong>\r\n      <br />\r\n      <br />\r\n      <small>\r\n        <strong>Doctor Name</strong>\r\n      </small>\r\n      <h4 className=\"light-black\">{props.doctorName}</h4>\r\n      <small>\r\n        <strong>Working Hours</strong>\r\n      </small>\r\n      <h4 className=\"light-black\">{props.workingHours}</h4>\r\n      <br />\r\n    </MyCard>\r\n  );\r\n};\r\n\r\nexport default EachAppointment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyCard from \"../../../../UI/MyCard/MyCard\";\r\nimport Spinner from \"../../../../UI/Spinner/Spinner\";\r\nimport { axiosInstance } from \"../../../../Utility/axiosInstance\";\r\nimport \"./Appointments.css\";\r\nimport EachAppointment from \"./EachAppointment/EachAppointment\";\r\n\r\nlet country_state_district = require(\"country_state_district\");\r\n\r\nlet districts = country_state_district.getDistrictsByStateId(32);\r\n\r\nconst Appointments = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [clinics, setClinics] = useState([\r\n    {\r\n      clinicName: \"Dinesh Clinics\",\r\n      doctorName: \"Dr.Dinesh kumar\",\r\n      workingHours: \"9:00am to 10:00pm\",\r\n      location: \"Namakkal\",\r\n      date: \"14-06-2001\",\r\n    },\r\n    {\r\n      clinicName: \"Giri Clinics\",\r\n      doctorName: \"Dr.Giri Sukesh\",\r\n      workingHours: \"9:00am to 10:00pm\",\r\n      location: \"Namakkal\",\r\n      date: \"14-06-2001\",\r\n    },\r\n    {\r\n      clinicName: \"Hari Clinics\",\r\n      doctorName: \"Dr.Hari Hara Suthan\",\r\n      workingHours: \"9:00am to 10:00pm\",\r\n      location: \"Namakkal\",\r\n      date: \"14-06-2001\",\r\n    },\r\n    {\r\n      clinicName: \"Aakash Clinics\",\r\n      doctorName: \"Dr.Aakash Don\",\r\n      workingHours: \"9:00am to 10:00pm\",\r\n      location: \"Namakkal\",\r\n      date: \"14-06-2001\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .post(\"/getallappointments\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false);\r\n        setClinics([...res.data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        // setClinics([]);\r\n        // setError(true);\r\n      });\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : error ? (\r\n    <MyCard>Something went wrong !</MyCard>\r\n  ) : clinics.length === 0 ? (\r\n    <>\r\n      <MyCard>\r\n        <h4>No Appointments so far</h4>\r\n      </MyCard>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <div className=\"flex-row flex-wrap\">\r\n        {clinics.map((el, index) => (\r\n          <EachAppointment {...el} key={index} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import MyCard from \"../../../../UI/MyCard/MyCard\";\r\nimport React from \"react\";\r\nimport \"./EachClinic.css\";\r\nimport AsyncButton from \"../../../../UI/AsyncButton/AsyncButton\";\r\n\r\nconst EachClinic = (props) => {\r\n  // const\r\n  return (\r\n    <MyCard\r\n      className=\"each-user-clinic hover-grow pointer\"\r\n      style={{ textAlign: \"left\", marginTop: 20, paddingBottom: 20 }}\r\n    >\r\n      <strong>{props.name}</strong>\r\n      <br />\r\n      <br />\r\n      <small>\r\n        <strong>{props.description}</strong>\r\n      </small>\r\n      <br />\r\n      <small>\r\n        <strong>{props.seatsAvailable} seats available</strong>\r\n      </small>\r\n      <h4 className=\"light-black\">{props.professor}</h4>\r\n      {/* <small>\r\n        <strong>Doctor Name</strong>\r\n      </small>\r\n      <h4 className=\"light-black\">{props.doctorName}</h4>\r\n      <small>\r\n        <strong>Working Hours</strong>\r\n      </small>\r\n      <h4 className=\"light-black\">{props.workingHours}</h4>\r\n      <br /> */}\r\n      <AsyncButton style={{ margin: \"auto\" }} onClick={() => {}}>\r\n        {/* Request Appointment */}\r\n        Register\r\n      </AsyncButton>\r\n    </MyCard>\r\n  );\r\n};\r\n\r\nexport default EachClinic;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyDropDown from \"../../../UI/DropDown/DropDown\";\r\nimport EachField from \"../../../UI/FormField/FormField\";\r\nimport MyCard from \"../../../UI/MyCard/MyCard\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport { axiosInstance } from \"../../../Utility/axiosInstance\";\r\nimport AppointmentForm from \"./AppointmentForm/AppointmentForm\";\r\nimport \"./Clinics.css\";\r\nimport EachClinic from \"./EachClinic/EachClinic\";\r\n\r\nlet country_state_district = require(\"country_state_district\");\r\n\r\nlet districts = country_state_district.getDistrictsByStateId(32);\r\n\r\nconst Clinics = (props) => {\r\n  const [college, setCollege] = useState(null);\r\n  const [courses, setCourses] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const { data } = useSelector((state) => state.login);\r\n  const [colleges, setColleges] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .get(\"/college/list\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false);\r\n        setColleges([...res.data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        // setClinics([]);\r\n        // setError(true);\r\n      });\r\n  }, []);\r\n\r\n  const getCourses = (id) => {\r\n    setShow(true);\r\n    setLoading(true);\r\n    axiosInstance\r\n      .get(`college/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false);\r\n        setCourses([...res.data]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        // setClinics([]);\r\n        // setError(true);\r\n      });\r\n  };\r\n\r\n  let afterFilter = data.registeredCourses;\r\n  console.log(data);\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : error ? (\r\n    <MyCard>Something went wrong !</MyCard>\r\n  ) : afterFilter.length === 0 && !show ? (\r\n    <>\r\n      <EachField\r\n        type=\"select\"\r\n        name=\"college\"\r\n        onChange={(value, name) => {\r\n          setCollege(value);\r\n          getCourses(colleges.find((el) => el.name === value)?.collegeId);\r\n        }}\r\n        options={[...colleges.map((el) => `${el.name}`)]}\r\n        // options={[...districts.map((el) => el.name)]}\r\n        value={college}\r\n        placeholder=\"Choose College\"\r\n      />\r\n      <MyCard>\r\n        <h4>No Courses Found !</h4>\r\n      </MyCard>\r\n    </>\r\n  ) : show ? (\r\n    <>\r\n      <EachField\r\n        type=\"select\"\r\n        name=\"college\"\r\n        onChange={(value, name) => {\r\n          setCollege(value);\r\n          getCourses(colleges.find((el) => el.name === value)?.collegeId);\r\n        }}\r\n        options={[...colleges.map((el) => `${el.name}`)]}\r\n        value={college}\r\n        placeholder=\"Choose Location\"\r\n      />\r\n      <div className=\"flex-row flex-wrap\">\r\n        {courses.map((el, index) => (\r\n          <EachClinic {...el} key={index} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default Clinics;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport PageShell from \"../../UI/PageShell/PageShell\";\r\nimport Sidebar from \"../../UI/Sidebar/Sidebar\";\r\nimport Appointments from \"./Clinics/Appointments/Appointments\";\r\nimport Clinics from \"./Clinics/Clinics\";\r\nimport \"./Store.css\";\r\n\r\nconst Store = (props) => {\r\n  var storeSidebar = [\r\n    { name: \"Courses\", to: \"/clinics\", initialActive: true },\r\n    { name: \"LOGOUT\", to: \"/logout\" },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Sidebar\r\n        style={{ background: \"transparent\" }}\r\n        routes={storeSidebar}\r\n        heading={\r\n          <img\r\n            src={require(\"../../../assets/images/EZWalkin-Logo.jpg\")}\r\n            alt=\"logo\"\r\n          />\r\n        }\r\n      />\r\n      <br />\r\n      <Switch>\r\n        <Route path=\"/appointments\" component={PageShell(Appointments)} />\r\n        <Route path=\"/clinics\" component={PageShell(Clinics)} />\r\n        <Redirect to={props.auth ? \"/clinics\" : \"/auth\"} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // auth: state.login.token !== null,\r\n    auth: true,\r\n    logo: state.login.logo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n"],"sourceRoot":""}
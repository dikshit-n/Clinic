{"version":3,"sources":["Components/UI/MyCard/MyCard.js","assets/images/Default-Profile.png","Components/UI/Date/Date.js","Components/UI/Select/Select.js","Components/UI/FormField/FormField.js","Components/UI/FormInfo/FormInfo.js","Components/UI/ImageUpload/default-image.png","Components/Utility/responsiveTextSize.js","Components/Pages/Store/Offers/AddOffer/SAddOfferLoader/SAddOfferLoader.js","Components/UI/Sidebar/Sidebar.js","Components/Utility/CompressImage.js","Components/Utility/validateImage.js","Components/UI/Modal/Modal.js","Components/UI/CheckBox/CheckBox.js","Components/UI/ImageUpload/validateImage.js","Components/UI/ImageUpload/ImageUpload.js","Components/Utility/numbersWithComma.js","Components/Pages/Partner/ViewStore/EachStore/EachStoreLoader/EachStoreLoader.js","Components/Pages/Store/Offers/AddOffer/AddOffer.js","Components/Pages/Store/Offers/ViewOffer/EachOffer.js/EachOffer.js","Components/Pages/Store/Offers/ViewOffer/ViewOffer.js","Components/UI/RoundProgress/RoundProgress.js","Components/Pages/Store/home/home.js","Components/Pages/Store/Profile/Profile.js","Components/Utility/base64ToPdf.js","Components/Pages/Store/Store.js"],"names":["MyCard","props","classNames","className","join","style","title","titleStyle","textAlign","titleCenter","children","module","exports","DateInput","useState","value","startDate","setStartDate","placeholderText","placeholder","dateFormat","selected","onChange","date","target","name","SelectInput","classNamePrefix","ref","undefined","length","label","styles","control","background","options","map","el","EachField","id","uniqueid","type","FormGroup","Label","for","displayName","addon","InputGroup","InputGroupAddon","addonType","InputGroupText","text","Input","disabled","event","required","readOnly","Select","getFormField","FormInfo","classes","color","info","adjustTextSize","elements","_i","_len","_results","$","push","resizeText","_results1","elNewFontSize","parseInt","css","slice","scrollHeight","offsetHeight","SAddOfferLoader","fromPartner","withRouter","checked","setChecked","location","pathname","useEffect","window","onscroll","document","getElementById","body","scrollTop","documentElement","padding","width","ready","prev","on","e","preventDefault","this","parent","find","slideToggle","moveMarker","activeNav","totalWidth","parseFloat","precedingAnchorWidth","a","aWidth","aPadLeft","aPadRight","anchorWidths","each","index","elem","hasClass","anchorWidthCounter","activeMarker","click","removeClass","parents","addClass","href","goto","to","history","toggle","heading","onClick","showOnMobile","htmlFor","routes","dropdown","some","includes","key","ele","ind","component","visibility","compress","require","compressImage","files","callBack","size","quality","maxWidth","maxHeight","resize","then","data","validateImage","endsWith","Modal","outerClassNames","innerClassNames","contentClassName","querySelector","show","overflowY","in","timeout","unmountOnExit","onClose","CheckBox","marginLeft","ImageUpload","imageRef","useRef","defaultImage","imageurl","setImageUrl","error","setError","validty","setValidity","loading","setLoading","querySelectorAll","forEach","editable","cursor","addEventListener","classList","add","remove","dataTransfer","imageChange","sizeLimit","image","console","log","fd","FileReader","readAsDataURL","onload","result","display","alignItems","justifyContent","flexDirection","needPreview","src","alt","height","AsyncButton","current","margin","prefix","numberWithComma","x","toString","replace","EachStoreLoader","lg","md","sm","offerStart","offerEnd","offerImage","users","formData","setFormData","setOptions","message","setMessage","setInfo","setType","setShow","submitLoading","setSubmitLoading","showDropDown","setShowDropDown","axiosInstance","post","res","catch","err","storeChange","element","included","_id","filter","changeHandler","schema","phone","autoComplete","minDate","Date","getFullYear","getMonth","getDate","goBack","aria-hidden","hideAlert","onSubmit","storeId","submitData","getTime","status","validity","Object","values","every","trim","EachOffer","modalLoading","setModalLoading","edit","userId","Spinner","storeName","marginTop","Alert","afterSubmit","editedObject","entireValue","onEdit","setEdit","fetchData","RoundProgress","barColor","pathColor","textColor","backgroundColor","percentage","Home","total","storesVisits","mostVisited","leastVisited","mostVisitedStore","leastVisitedStore","Profile","QRCode","email","address","logo","details","setDetails","detailsCopy","setDetailsCopy","editProfile","setEditProfile","sending","setSending","touched","setTouched","setImageUploading","imageError","setImageError","errorColor","setErrorColor","spellCheck","getData","valid","imageChangeHandler","processedImage","updateProfile","imageEdit","Col","position","backgroundImage","imgData","doc","jsPDF","addImage","output","save","imageToPdf","connect","state","auth","login","token","storeSidebar","Sidebar","path","PageShell","AddOffer","ViewOffer"],"mappings":"2JA4BeA,IAxBA,SAACC,GACd,IAAIC,EAAa,CAAC,UAAWD,EAAME,UAAYF,EAAME,UAAY,IACjE,OACE,yBAAKA,UAAWD,EAAWE,KAAK,KAAMC,MAAOJ,EAAMI,OAChDJ,EAAMK,MACL,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,wBACEH,UAAU,wBACVE,MAAK,2BACAJ,EAAMM,YADN,IAEHC,UAAWP,EAAMQ,YAAc,SAAW,UAG3CR,EAAMK,SAIX,KACHL,EAAMS,Y,oBCvBbC,EAAOC,QAAU,IAA0B,6C,uJCoC5BC,G,cA3BG,SAACZ,GAAW,IAAD,EACOa,mBAASb,EAAMc,OADtB,mBACpBC,EADoB,KACTC,EADS,KAG3B,OACE,kBAAC,WAAD,KACE,6BACA,kBAAC,IAAD,iBACMhB,EADN,CAEEiB,gBAAiBjB,EAAMkB,YACvBhB,UAAU,OACViB,WAAW,aACXC,SAAUL,EACVM,SAAU,SAACC,GACTN,EAAaM,GACbtB,EAAMqB,SAAS,CACbE,OAAQ,CACNT,MAAOQ,EACPE,KAAMxB,EAAMwB,e,yBCcXC,EArCK,SAACzB,GACnB,OACE,kBAAC,IAAD,CACEE,UAAU,eACVwB,gBAAgB,eAChBR,YAAalB,EAAMkB,YACnBS,IAAK3B,EAAM2B,IACXb,WACkBc,IAAhB5B,EAAMc,OAAuC,OAAhBd,EAAMc,MACR,IAAvBd,EAAMc,MAAMe,OACV,KACA,CAAEf,MAAOd,EAAMc,MAAOgB,MAAO9B,EAAMc,OACrC,KAENO,SAAU,SAACP,GAAD,OACRd,EAAMqB,SACM,OAAVP,QAA4Bc,IAAVd,EAAsBA,EAAMgB,MAAQ,KACtD9B,EAAMwB,OAGVA,KAAMxB,EAAMwB,KACZO,OAAQ,CACNC,QAAS,SAACD,GAAD,mBAAC,aACRE,WAAY,8BACTF,GACA/B,EAAMI,SAGb8B,QACoB,OAAlBlC,EAAMkC,QACF,GADJ,YAEQlC,EAAMkC,QAAQC,KAAI,SAACC,GAAD,MAAS,CAAEtB,MAAOsB,EAAIN,MAAOM,UC0OhDC,IA9PG,SAACrC,GACjB,IAAIsC,EAAKC,MA0PT,OAzPqB,WACnB,OAAQvC,EAAMwC,MACZ,IAAK,OACH,OACE,kBAACC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAACC,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJd,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjBnC,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAIR,kBAACmD,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJd,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjBnC,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAKd,IAAK,WACH,OACE,kBAACyC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAACC,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAIR,kBAACmD,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAKd,IAAK,SACH,OACE,kBAACyC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAACM,EAAD,eACEpD,MAAO,CAAE6B,WAAY,WACrBT,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACP,EAAOU,GAChBxB,EAAMqB,SAASP,EAAOU,IAExBU,QAASlC,EAAMkC,SACXlC,KAIR,kBAACwD,EAAD,eACEpD,MAAO,CAAE6B,WAAY,WACrBT,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACP,EAAOU,GAChBxB,EAAMqB,SAASP,EAAOU,IAExBU,QAASlC,EAAMkC,SACXlC,KAKd,IAAK,SACH,OACE,kBAACyC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAACC,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAIR,kBAACmD,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAMd,IAAK,OACH,OACE,kBAACyC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAAC,EAAD,eACEE,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAIR,kBAAC,EAAD,eACEoD,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJxB,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjB7B,KAAMxB,EAAMwB,KACZN,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAKd,QACE,OACE,kBAACyC,EAAA,EAAD,CAAWrC,MAAO,CAAEG,UAAW,SAC7B,kBAACmC,EAAA,EAAD,CAAOC,IAAKL,GAAKtC,EAAM4C,aACtB5C,EAAM6C,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,UAAWhD,EAAM6C,MAAML,MACtC,kBAACS,EAAA,EAAD,KAAiBjD,EAAM6C,MAAMK,OAE/B,kBAACC,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJd,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjBnC,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,KAIR,kBAACmD,EAAA,EAAD,eACEC,SAAUpD,EAAMoD,SAChBZ,KAAMxC,EAAMwC,KACZF,GAAIA,EACJd,KAAMxB,EAAMwB,KACZV,MAAOd,EAAMc,MACbO,SAAU,SAACgC,GACTrD,EAAMqB,SAASgC,IAEjBnC,YAAalB,EAAMkB,YACnBoC,SAAUtD,EAAMsD,SAChBC,SAAUvD,EAAMuD,UACZvD,MAOXyD,K,iCCzQT,2BAiBeC,IAdE,SAAC1D,GAChB,IAAI2D,EAAU,CAAC,OAAQ3D,EAAME,UAAYF,EAAME,UAAY,IAC3D,OACE,yBAAKA,UAAWyD,EAAQxD,KAAK,MAC3B,uBACED,UAAU,uCACVE,MAAO,CAAEwD,MAAO5D,EAAM4D,MAAQ5D,EAAM4D,MAAQ,UAE3C5D,EAAM6D,S,oBCXfnD,EAAOC,QAAU,IAA0B,2C,iCCA3C,wDAmBamD,EAAiB,WAC5B,IAAI1B,EAAI2B,EAAUC,EAAIC,EAAMC,EAE5B,MADAH,EAAWI,IAAE,YACAtC,OAAS,GAAtB,CAIA,IADAqC,EAAW,GACNF,EAAK,EAAGC,EAAOF,EAASlC,OAAQmC,EAAKC,EAAMD,IAC9C5B,EAAK2B,EAASC,GACdE,EAASE,KACN,SAAUhC,GACT,IAAIiC,EAAYC,EAQhB,IAPAD,EAAa,WACX,IAAIE,EAGJ,OAFAA,EACEC,SAASL,IAAE/B,GAAIqC,IAAI,aAAaC,MAAM,GAAI,IAAM,EAAI,KAC/CP,IAAE/B,GAAIqC,IAAI,YAAaF,IAEhCD,EAAY,GACLlC,EAAGuC,aAAevC,EAAGwC,cAC1BN,EAAUF,KAAKC,KAEjB,OAAOC,EAZR,CAaElC,IAGP,OAAO8B,K,mGC7CT,oCAqCeW,IAhCS,SAAC7E,GACvB,OACE,6BACGA,EAAM8E,YACL,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAQ5E,UAAU,mDAChB,yBAAKA,UAAU,0CAEjB,8BAEA,KACJ,kBAAC,IAAD,CAAQA,UAAU,eAChB,yBAAKA,UAAU,yCACf,6BACA,yBAAKA,UAAU,oCACf,6BACA,yBAAKA,UAAU,sCACf,6BACA,yBAAKA,UAAU,0CACf,6BACA,yBAAKA,UAAU,0CACf,6BACA,yBAAKA,UAAU,0CACf,6BACA,yBAAKA,UAAU,0CACf,6BACA,yBAAKA,UAAU,0C,+FCoRR6E,iBA7PC,SAAC/E,GAAW,IAAD,EACKa,oBAAS,GADd,mBAClBmE,EADkB,KACTC,EADS,OAEapE,mBAASb,EAAMkF,SAASC,UAFrC,6BAIzBC,qBAAU,WAURC,OAAOC,SAAW,WAMwB,OAAtCC,SAASC,eAAe,gBACc5D,IAAtC2D,SAASC,eAAe,YAGtBD,SAASE,KAAKC,UAAY,IAC1BH,SAASI,gBAAgBD,UAAY,IAErCH,SAASC,eAAe,UAAUpF,MAAMwF,QAAU,WAClDL,SAASC,eAAe,UAAUpF,MAAMyF,MAAQ,UAEhDN,SAASC,eAAe,UAAUpF,MAAMwF,QAAU,YAClDL,SAASC,eAAe,UAAUpF,MAAMyF,MAAQ,UAItD1B,IAAEoB,UAAUO,OAAM,WAChB3B,IAAE,uBACC4B,KAAK,KACLC,GAAG,SAAS,SAAUC,GACrBA,EAAEC,iBACF/B,IAAEgC,MAAMC,SAASC,KAAK,kBAAkBC,oBAI9CnC,IAAEoB,UAAUO,OAAM,WAChB,SAASS,IACP,IAAIC,EAAYrC,IAAE,mBAIdsC,EAHctC,IAAEqC,GAAWX,QACXa,WAAWvC,IAAEqC,GAAW/B,IAAI,iBAC3BiC,WAAWvC,IAAEqC,GAAW/B,IAAI,kBAG7CkC,EAuBN,WACE,IACIC,EACAC,EACAC,EACAC,EAJAC,EAAe,EAsBnB,OAhBA7C,IAAE,iBAAiB8C,MAAK,SAAUC,EAAOC,GAEvC,GADiBhD,IAAEgD,GAAMC,SAAS,gBAGhC,OAAO,EAGTR,EAAIzC,IAAEgD,GAAMd,KAAK,KACjBQ,EAASD,EAAEf,QACXiB,EAAWJ,WAAWE,EAAEnC,IAAI,iBAC5BsC,EAAYL,WAAWE,EAAEnC,IAAI,kBAG7BuC,GAFcH,EAASC,EAAWC,KAK7BC,EA9CoBK,GAKvBC,EAAenD,IAAE,kBACjBA,IAAE,mBAAmBiD,SAAS,iBAChCjD,IAAEmD,GAAc7C,IAAI,UAAW,QAC/BN,IAAEmD,GAAc7C,IAAI,OAAQkC,EAAuB,MAEnDxC,IAAEmD,GAAc7C,IAAI,UAAW,SAE/BN,IAAEmD,GAAc7C,IAAI,QAASgC,GAE7BtC,IAAEmD,GAAc7C,IAAI,OAAQkC,EAAuB,KAOvDJ,IA4BApC,IAAE,gBAAgBoD,OAAM,SAAUtB,GAChCA,EAAEC,iBACF/B,IAAE,iBAAiBqD,YAAY,gBAC/BrD,IAAEgC,MAAMsB,QAAQ,MAAMC,SAAS,gBAC/BnB,YAGH,CAAClB,OAAOH,SAASyC,OAMpB,IAAMC,EAAO,SAACvE,EAAOwE,GACnBxE,EAAM6C,iBACNlG,EAAM8H,QAAQ1D,KAAKyD,GACnBE,KAGIA,EAAS,WACb9C,GAAW,SAACc,GAAD,OAAWA,MAGxB,OACE,kBAAC,WAAD,KACE,yBAAK7F,UAAU,qBAAqBoC,GAAG,UACrC,yBAAKpC,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QAEZF,EAAMgI,UAIX,2BACExF,KAAK,WACLwC,QAASA,EACT1C,GAAG,cACH2F,QAASF,IAEV/H,EAAMkI,aACL,yBAAKhI,UAAU,kBAAkBF,EAAMkI,cACrC,KACJ,2BAAOC,QAAQ,cAAcjI,UAAU,aACrC,uBAAGA,UAAU,gBAGf,yBAAKA,UAAU,OACb,wBAAIA,UAAU,aACXF,EAAMoI,OAAOjG,KAAI,SAACC,EAAI8E,GAAL,OAChB9E,EAAGiG,SACD,wBACEnI,UACE,8CACCkC,EAAGiG,SAASnG,QAAQoG,MAAK,SAACnB,GAAD,OACxB9B,OAAOH,SAASyC,KAAKY,SAASpB,EAAKU,OAEjC,gBAKA,IAYNW,IAAKtB,GAEL,uBAAGS,KAAK,IAAIzH,UAAU,YACnBkC,EAAGiG,SAASL,SAEf,wBAAI9H,UAAU,iBACXkC,EAAGiG,SAASnG,QAAQC,KAAI,SAACsG,EAAKC,GAAN,OACvB,wBAAIxI,UAAU,WAAWsI,IAAKE,GAC5B,uBACExI,UAAU,gBACVyH,KAAK,IACLM,QAAS,SAAC5E,GAAD,OAAWuE,EAAKvE,EAAOoF,EAAIZ,MAEnCY,EAAIjH,YAMbY,EAAGuG,UACL,wBACEzI,UACE,0CACCmF,OAAOH,SAASyC,KAAKY,SAASnG,EAAGyF,IAC9B,gBACA,IAGNW,IAAKtB,EACLe,QAAS,SAAC5E,GAAD,OAAWuE,EAAKvE,EAAOjB,EAAGyF,MAEnC,uBACEzH,MAAO,CAAEwI,WAAY,UACrB1I,UAAU,gBAEXkC,EAAGuG,WAGN,wBACEzI,UACE,4BACCmF,OAAOH,SAASyC,KAAKY,SAASnG,EAAGyF,IAC9B,gBACA,IASNW,IAAKtB,GAEL,uBACES,KAAK,IACLM,QAAS,SAAC5E,GAAD,OAAWuE,EAAKvE,EAAOjB,EAAGyF,KACnC3H,UAAU,iBAETkC,EAAGZ,UAMZ,2BAAO2G,QAAQ,cAAcjI,UAAU,aACrC,uBAAGA,UAAU,kBAGjB,uBAAGA,UAAU,0BAInB,yBAAKA,UAAU,mB,+HC7Sf2I,EAAW,IADAC,EAAQ,MAGZC,EAAa,uCAAG,WAAOC,EAAO9G,EAAS+G,GAAvB,SAAArC,EAAA,sDAC3BiC,EACGA,SAASG,EAAO,CACfE,KAAMhH,EAAQgH,KAAOhH,EAAQgH,KAAO,EACpCC,QAASjH,EAAQiH,QAAUjH,EAAQiH,QAAU,IAC7CC,SAAU,KACVC,UAAW,KACXC,YAA2B1H,IAAnBM,EAAQoH,QAAuBpH,EAAQoH,SAEhDC,MAAK,SAACC,GAELP,EAAS,YAAIO,OAXU,2CAAH,2D,iCCH1B,kCAAO,IAAMC,EAAgB,SAACjI,GAC5B,OACEA,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,W,iCCXlB,sCA8BeC,IA1BD,SAAC3J,GACb,IAAI4J,EAAkB,CAAC,WAAY5J,EAAME,WACrC2J,EAAkB,CAAC,gBAAiB7J,EAAM8J,kBAS9C,OARA1E,qBAAU,WACR,IAAMK,EAAOF,SAASwE,cAAc,QAChC/J,EAAMgK,KACRvE,EAAKrF,MAAM6J,UAAY,SAEvBxE,EAAKrF,MAAM6J,UAAY,KAExB,CAACjK,EAAMgK,OAER,kBAAC,IAAD,CACEE,GAAIlK,EAAMgK,KACVG,QAAS,IACTlK,WAAW,QACXmK,eAAa,GAEb,yCAASpK,EAAT,CAAgBE,UAAW0J,EAAgBzJ,KAAK,OAC9C,yBAAK8H,QAASjI,EAAMqK,QAASnK,UAAU,gBACvC,yBAAKA,UAAW2J,EAAgB1J,KAAK,MAAOH,EAAMS,c,iCCxB1D,2BAoBe6J,IAjBE,SAACtK,GAChB,OACE,yBAAKE,UAAU,SACb,yCACEsC,KAAK,WACLF,GAAItC,EAAMsC,IAAMtC,EAAMwB,KACtBH,SAAUrB,EAAMqB,SAChBG,KAAMxB,EAAMwB,KACZwD,QAAShF,EAAMgF,SACXhF,IAEN,2BAAOmI,QAASnI,EAAMwB,OACtB,0BAAMpB,MAAO,CAAEmK,WAAY,SAAWvK,EAAM4C,gB,6FCfrC6G,G,OAAgB,SAACjI,GAC5B,OACEA,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,SACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,UACdlI,EAAKkI,SAAS,W,QCwKZb,GAPS2B,IAtKK,SAACxK,GACnB,IAAMyK,EAAWC,mBADY,EAEG7J,mBAC9Bb,EAAM2K,aAAe3K,EAAM2K,aAAe7B,EAAQ,MAHvB,mBAEtB8B,EAFsB,KAEZC,EAFY,OAKHhK,mBAAS,IALN,mBAKtBiK,EALsB,KAKfC,EALe,OAMElK,mBAAS,MANX,mBAMtBmK,EANsB,KAMbC,EANa,OAOCpK,oBAAS,GAPV,mBAOtBqK,EAPsB,KAObC,EAPa,KAS7B/F,qBAAU,WACKG,SAAS6F,iBAAiB,iBAClCC,SAAQ,SAACjJ,IACW,IAAnBpC,EAAMsL,SACRlJ,EAAGhC,MAAMmL,OAAS,WAElBnJ,EAAGoJ,iBAAiB,YAAY,SAACvF,GAC/BA,EAAEC,iBACF9D,EAAGqJ,UAAUC,IAAI,aAEnB,CAAC,YAAa,WAAWL,SAAQ,SAAC7I,GAAD,OAC/BJ,EAAGoJ,iBAAiBhJ,GAAM,SAACyD,GACzB7D,EAAGqJ,UAAUE,OAAO,gBAIxBvJ,EAAGoJ,iBAAiB,QAAQ,SAACvF,GAC3BA,EAAEC,iBACED,EAAE2F,aAAa5C,MAAMnH,SACvBgK,EAAY,CAAEtK,OAAQ0E,EAAE2F,eACxBxJ,EAAGqJ,UAAUE,OAAO,oBAK3B,IAEHvG,qBAAU,WACRpF,EAAMqB,SAASuJ,EAAUI,EAASF,KACjC,CAACF,EAAUI,EAASF,IAEvB,IAAMe,EAAc,SAAC5F,GACnB,IAAuB,IAAnBjG,EAAMsL,SACR,QAA0B1J,IAAtBqE,EAAE1E,OAAOyH,MAAM,GAAkB,CAGnC,GAFAmC,GAAW,GACXF,EAAYxB,EAAcxD,EAAE1E,OAAOyH,MAAM,GAAGxH,QACvCiI,EAAcxD,EAAE1E,OAAOyH,MAAM,GAAGxH,MAGnC,OAFAuJ,EAAS,mDACTI,GAAW,GACJF,GAAY,GACd,GAAIjL,EAAM8L,WACX7F,EAAE1E,OAAOyH,MAAM,GAAGE,KAAmC,IAA5B1E,SAASxE,EAAM8L,WAAoB,CAC9D,GAAI9L,EAAM6I,SAAU,CAKlB,OAAOE,EACL,CAAC9C,EAAE1E,OAAOyH,MAAM,IAChB,CAAEE,KAAMlJ,EAAM8L,UAAYtH,SAASxE,EAAM8L,WAAa,IANvC,SAACC,GAChBlB,EAAYkB,GACZZ,GAAW,MAWb,OAHAJ,EAAS,yBAA2B/K,EAAM8L,UAAY,OACtDX,GAAW,QACXF,GAAY,GAMlBe,QAAQC,IAAI,kBACZ,IAAIF,EAAQ9F,EAAE1E,OAAOyH,MAAM,GACvBkD,EAAK,IAAIC,WACbD,EAAGE,cAAcL,GACjBG,EAAGG,OAAS,SAACpG,GACX4E,EAAY5E,EAAE1E,OAAO+K,QACrBnB,GAAW,SAGbF,GAAY,GACZF,EAAS,mBACTF,EACE7K,EAAM2K,aACF3K,EAAM2K,aACN7B,EAAQ,OAUpB,OACE,yBACE1I,MAAO,CACLmM,QAAS,OACTC,WAAY,aACZC,eAAgB,aAChBC,cAAe,WAGhB1M,EAAM2M,YACL,yBAAKzM,UAAU,gBACZgL,EACClL,EAAM2K,aACJ3K,EAAM2K,aAEN,yBACEiC,IACE5M,EAAM2K,aACF3K,EAAM2K,aACN7B,EAAQ,KAEd+D,IAAI,UACJ3M,UAAW,SAAWF,EAAME,UAAY,oBACxCE,MAAK,aACHyF,MAAO,OACPiH,OAAQ,QACL9M,EAAMI,SAKf,yBACEwM,IACkB,OAAhB5M,EAAM+L,MACF/L,EAAM2K,aACJ3K,EAAM2K,aACN7B,EAAQ,KACV9I,EAAM+L,MAEZc,IAAI,UACJ3M,UAAW,SAAWF,EAAME,UAC5BE,MAAK,aACHyF,MAAO,OACPiH,OAAQ,QACL9M,EAAMI,UAKf,KACJ,6BACA,2BACEoC,KAAK,OACLb,IAAK8I,EACLrK,MAAO,CAAEmM,QAAS,QAClBlL,SAAU,SAACgC,GAAD,OAAWwI,EAAYxI,OAEf,IAAnBrD,EAAMsL,SACL,kBAACyB,EAAA,EAAD,CACE7B,QAASA,EACTtH,MAAM,UACNpB,KAAK,SACLyF,QAlEY,WAClBwC,EAASuC,QAAQzF,UAmEX,uBAAGnH,MAAO,CAAEwD,MAAO,QAASqJ,OAAQ,IAApC,iBAEA,KACJ,+BAYW,IADAnE,EAAQ,OAGZC,EAAa,uCAAG,WAAOC,EAAO9G,EAAS+G,GAAvB,SAAArC,EAAA,sDAC3BiC,EACGA,SAASG,EAAO,CACfE,KAAMhH,EAAQgH,KAAOhH,EAAQgH,KAAO,EACpCC,QAASjH,EAAQiH,QAAUjH,EAAQiH,QAAU,IAC7CC,SAAU,KACVC,UAAW,KACXC,YAA2B1H,IAAnBM,EAAQoH,QAAuBpH,EAAQoH,SAEhDC,MAAK,SAACC,GAELP,EAASO,EAAK,GAAG0D,OAAS1D,EAAK,GAAGA,SAXX,2CAAH,2D,iCCrLnB,SAAS2D,EAAgBC,GAC9B,YAAUxL,IAANwL,GAAyB,OAANA,GACO,IAAxBA,EAAEC,WAAWxL,QAAiC,QAAjBuL,EAAEC,WAC1BD,EACJC,WACAC,QAAQ,wBAAyB,KACjCD,WAIO,GAVhB,mC,iCCAA,sDAgCeE,IA3BS,SAACvN,GACvB,OACE,kBAAC,IAAD,CAAQE,UAAU,iBAChB,kBAAC,IAAD,CAAKsN,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKxN,UAAU,eACnC,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,QACb,6BACA,yBAAKA,UAAU,oCACf,yBAAKA,UAAU,sCACf,6BACA,6BACA,yBAAKA,UAAU,oCACf,yBAAKA,UAAU,sCACf,6BACA,6BACA,yBAAKA,UAAU,oCACf,yBAAKA,UAAU,sCACf,+BAGJ,kBAAC,IAAD,CAAKsN,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKxN,UAAU,eACnC,yBAAKA,UAAU,6B,kNCiRR6E,iBA7RE,SAAC/E,GAAW,IAAD,EACMa,mBAAS,CACvC8M,WAAY,GACZC,SAAU,GACVC,WAAY,KACZC,MAAO,KALiB,mBACnBC,EADmB,KACTC,EADS,OAOInN,mBAAS,IAPb,mBAOnBqB,EAPmB,KAOV+L,EAPU,OAQIpN,mBAAS,IARb,mBAQnBqN,EARmB,KAQVC,EARU,OASFtN,mBAAS,KATP,mBASnBgD,EATmB,KASbuK,EATa,OAUFvN,mBAAS,IAVP,mBAUnB2B,EAVmB,KAUb6L,EAVa,OAWFxN,oBAAS,GAXP,mBAWnBmJ,EAXmB,KAWbsE,EAXa,OAYIzN,oBAAS,GAZb,mBAYnBqK,EAZmB,KAYVC,EAZU,OAagBtK,oBAAS,GAbzB,mBAanB0N,EAbmB,KAaJC,EAbI,OAcc3N,oBAAS,GAdvB,mBAcnB4N,EAdmB,KAcLC,EAdK,KAgB1BtJ,qBAAU,WACR+F,GAAW,GACXwD,IACGC,KAAK5O,EAAM8E,YAAc,oBAAsB,cAC/CyE,MAAK,SAACsF,GACL1D,GAAW,GACX8C,EAAW,YAAIY,EAAIrF,OACnBwC,QAAQC,IAAI4C,EAAIrF,SAEjBsF,OAAM,SAACC,GACN5D,GAAW,GACX8C,EAAW,IACXjC,QAAQC,IAAI8C,QAEf,IAEH,IAAMC,EAAc,SAACC,GACnB,IAAIC,EAAWnB,EAASD,MAAMxF,MAAK,SAAClG,GAAD,OAAQA,EAAG+M,MAAQF,EAAQE,OAO5DnB,EANGkB,EAMS,SAACnJ,GAAD,mBAAC,eACRA,GADO,IAEV+H,MAAM,YAAK/H,EAAK+H,MAAMsB,QAAO,SAAChN,GAAD,OAAQA,EAAG+M,MAAQF,EAAQE,WAP9C,SAACpJ,GAAD,mBAAC,eACRA,GADO,IAEV+H,MAAM,GAAD,mBAAM/H,EAAK+H,OAAX,CAAkBmB,SAUvBI,GAAgB,SAAChM,GAAW,IAAD,EACPA,EAAM9B,OAAtBC,EADuB,EACvBA,KAAMV,EADiB,EACjBA,MAEZkN,EADW,cAATxM,EACU,SAACuE,GAAD,yBAAC,eACRA,GADO,uBAETvE,EAAOV,GAFE,yBAGA,IAHA,KAMA,SAACiF,GAAD,mBAAC,eACRA,GADO,kBAETvE,EAAOV,OAWVwO,GAAS,CACX,CACE9N,KAAM,QACNpB,MAAO,CAAEmL,OAAQ,WACjB3I,YAAa,QACb1B,YAAa,eACboC,UAAU,EACVxC,MAAOiN,EAASD,MAAM3L,KAAI,SAACC,GAAD,OAAQA,EAAGmN,MAAQ,QAC7ClO,SAAU,aACV4G,QAAS,kBAAMyG,GAAgB,IAC/Bc,aAAc,OAEhB,CACEhO,KAAM,aACNoB,YAAa,aACb1B,YAAa,oBACbuO,QAAS,IAAIC,KACblN,KAAM,OACN1B,MAAOiN,EAASJ,WAChBtM,SAAUgO,GACV/L,UAAU,EACVkM,aAAc,OAEhB,CACEhO,KAAM,WACNoB,YAAa,WACb1B,YAAa,kBACbuO,QAC0B,KAAxB1B,EAASJ,YACe,OAAxBI,EAASJ,iBACe/L,IAAxBmM,EAASJ,WACL,IAAI+B,KACF3B,EAASJ,WAAWgC,cACpB5B,EAASJ,WAAWiC,WACpB7B,EAASJ,WAAWkC,UAAY,GAElC,KACNrN,KAAM,OACNY,SAAkC,KAAxB2K,EAASJ,WACnB7M,MAAOiN,EAASH,SAChBvM,SAAUgO,GACVG,aAAc,MACdlM,UAAU,IAEZ8L,QAAO,SAAChN,GAAD,OAAe,OAAPA,KA6DjB,OAAO8I,EACL,kBAAC,IAAD,CAAiBpG,YAAa9E,EAAM8E,cAEpC,kBAAC,WAAD,KACG9E,EAAM8E,YACL,kBAAC,IAAD,CAAQ5E,UAAU,gDAChB,yBAAKA,UAAU,0BAA0B+H,QAASjI,EAAM8P,QACtD,uBAAG5P,UAAU,yBAAyB6P,cAAY,UAEpD,yBAAK7P,UAAU,kCACb,wBAAIA,UAAU,cAAcF,EAAMwJ,KAAKhI,QAGzC,KACJ,6BACA,kBAAC,IAAD,CACEtB,UAAU,cACV8J,KAAMyE,EACNpE,QAAS,kBAAMqE,GAAgB,KAE/B,kBAAC,IAAD,CAAQxO,UAAU,sCAChB,yBAAKA,UAAU,0CACO,IAAnBgC,EAAQL,OACP,yBAAK3B,UAAU,eACb,2CAGF,6BACGgC,EAAQC,KAAI,SAACC,GAAD,OACX,yBACEoG,IAAKpG,EAAG+M,IACRjP,UAAU,6DACVE,MAAO,CAAEmL,OAAQ,WACjBtD,QAAS,kBAAM+G,EAAY5M,IAC3BE,GAAIF,EAAG+M,KAEP,yBAAKjP,UAAU,uCACZkC,EAAGmN,OAEN,yBAAKrP,UAAU,4BACb,kBAAC,IAAD,CACEsB,KAAMY,EAAGmN,MACTjN,GAAIF,EAAG+M,IACPnK,QAAS+I,EAASD,MAAMxF,MACtB,SAACG,GAAD,OAASA,EAAI0G,MAAQ/M,EAAG+M,OAE1B9N,SAAU,kBAAM2N,EAAY5M,aAQ1C,kBAAC,IAAD,CAAaI,KAAK,SAASyF,QAAS,kBAAMyG,GAAgB,KAA1D,UAMJ,6BACE,kBAAC,IAAD,CAAQrO,MAAM,aACZ,kBAAC,IAAD,CACEmC,KAAMA,EACN0L,QAASA,EACT8B,UA7EQ,WAChB1B,GAAQ,GACK,UAAT9L,GACFwL,EAAY,CACVL,WAAY,GACZC,SAAU,GACVC,WAAY,KACZC,MAAO,MAuEH9D,KAAMA,IAER,0BAAM9J,UAAU,OAAO+P,SA/HT,SAAC5M,GACrBA,EAAM6C,iBACN8F,QAAQC,IAAIjM,EAAMwJ,KAAK0G,SACvB1B,GAAiB,GACjB,IAAI2B,EAAU,2BACTpC,GADS,IAEZmC,QAASlQ,EAAM8E,YAAc9E,EAAMwJ,KAAK0G,QAAU,KAClDvC,WAAYI,EAASJ,WAAWyC,UAChCxC,SAAUG,EAASH,SAASwC,YAE9BpE,QAAQC,IAAIkE,GACZxB,IACGC,KACC5O,EAAM8E,YAAc,mBAAqB,iBACzCqL,GAED5G,MAAK,SAACsF,GACLL,GAAiB,GACjBxC,QAAQC,IAAI4C,GACO,MAAfA,EAAIwB,SACN/B,GAAQ,GACRH,EAAW,WACXE,EAAQ,eAGXS,OAAM,SAACC,GACNP,GAAiB,GAGjBF,GAAQ,GACRH,EAAW,SACXE,EAAQ,cAiGJ,kBAAC,IAAD,CACE1B,aAAW,EACXb,UAAU,IACVjD,UAAQ,EACR3I,UAAU,WACV6L,MAAOgC,EAASF,WAChBxM,SAAU,SAACuJ,EAAU0F,EAAUxF,GAC7BsD,EAAQtD,GACJwF,GACFlC,EAAQ,KACRJ,GAAY,SAACjI,GAAD,mBAAC,eACRA,GADO,IAEV8H,WAAYjD,QAGdoD,GAAY,SAACjI,GAAD,mBAAC,eACRA,GADO,IAEV8H,WAAY,aAKpB,kBAAC,IAAD,CAAUhK,KAAMA,IACfyL,GAAOnN,KAAI,SAACC,EAAI8E,GAAL,OACV,kBAAC,IAAD,eAAWsB,IAAKtB,GAAW9E,OAG7B,kBAAC,IAAD,CACE8I,QAASqD,EACTnL,UAzHQ,YACbmN,OAAOC,OAAOzC,GAAU5L,KAAI,SAACC,GAC9B,OAAW,OAAPA,GAAeA,IAAO,GACjB,GAEFA,MAGWqO,OAAM,SAACrO,GAAD,MAAiC,KAAzBA,EAAGiL,WAAWqD,UAkHxCxQ,UAAU,cACVsC,KAAK,UAJP,e,8VCiCGmO,EA/SG,SAAC3Q,GAAW,IAAD,EACKa,mBAAS,eAAKb,EAAMwJ,OADzB,mBACpBuE,EADoB,KACVC,EADU,OAEanN,oBAAS,GAFtB,mBAEpB+P,EAFoB,KAENC,EAFM,OAGGhQ,mBAAS,IAHZ,mBAGpBqB,EAHoB,KAGX+L,EAHW,OAIGpN,mBAAS,IAJZ,mBAIpBqN,EAJoB,KAIXC,EAJW,OAKHtN,mBAAS,KALN,mBAKpBgD,EALoB,KAKduK,EALc,OAMHvN,mBAAS,IANN,mBAMpB2B,EANoB,KAMd6L,EANc,OAOHxN,oBAAS,GAPN,mBAOpBmJ,EAPoB,KAOdsE,EAPc,OAQGzN,oBAAS,GARZ,mBAQpBqK,EARoB,aASerK,oBAAS,IATxB,mBASpB0N,EAToB,KASLC,EATK,OAUa3N,oBAAS,GAVtB,oBAUpB4N,GAVoB,MAUNC,GAVM,MAqCrBM,GAAc,SAACC,GACnB,IAAIC,EAAWnB,EAASD,MAAMxF,MAAK,SAAClG,GAAD,OAAQA,EAAG+M,MAAQF,EAAQE,OAO5DnB,EANGkB,EAMS,SAACnJ,GAAD,mBAAC,eACRA,GADO,IAEV+H,MAAM,YAAK/H,EAAK+H,MAAMsB,QAAO,SAAChN,GAAD,OAAQA,EAAG+M,MAAQF,EAAQE,WAP9C,SAACpJ,GAAD,mBAAC,eACRA,GADO,IAEV+H,MAAM,GAAD,mBAAM/H,EAAK+H,OAAX,CAAkBmB,SAUvBI,GAAgB,SAAChM,GAAW,IAAD,EACPA,EAAM9B,OAAtBC,EADuB,EACvBA,KAAMV,EADiB,EACjBA,MAEZkN,EADW,cAATxM,EACU,SAACuE,GAAD,yBAAC,eACRA,GADO,uBAETvE,EAAOV,GAFE,yBAGA,IAHA,KAMA,SAACiF,GAAD,mBAAC,eACRA,GADO,kBAETvE,EAAOV,OA8DVwO,GAAS,CACX,CACE9N,KAAM,QACN4B,UAAWpD,EAAM8Q,KACjB1Q,MAAO,CAAEmL,OAAQ,WACjB3I,YAAa,QACb1B,YAAa,eACboC,UAAU,EACVxC,MAAOiN,EAASD,MAAM3L,KAAI,SAACC,GAAD,OAAQA,EAAGmN,MAAQ,QAC7ClO,SAAU,aACV4G,QAAS,WACPyG,IAAgB,GA3HpBmC,GAAgB,GAChBlC,IACGC,KACC,aACA5O,EAAM8E,YACF,CAAEoL,QAASlQ,EAAMwJ,KAAK2F,KACtB,CAAE4B,OAAQ/Q,EAAMwJ,KAAKuH,SAE1BxH,MAAK,SAACsF,GACLgC,GAAgB,GAChB5C,EAAW,YAAIY,EAAIrF,OACnBwC,QAAQC,IAAI4C,EAAIrF,SAEjBsF,OAAM,SAACC,GACN8B,GAAgB,GAChB5C,EAAW,IACXjC,QAAQC,IAAI8C,QA+GhB,CACEvN,KAAM,aACN4B,UAAWpD,EAAM8Q,KACjBlO,YAAa,aACb1B,YAAa,oBACbuO,QAAS,IAAIC,KACblN,KAAM,OACN1B,MAAOiN,EAASJ,WAChBtM,SAAUgO,GACV/L,UAAU,EACVkM,aAAc,OAEhB,CACEhO,KAAM,WACNoB,YAAa,WACb1B,YAAa,kBACbuO,QAC0B,KAAxB1B,EAASJ,YACe,OAAxBI,EAASJ,iBACe/L,IAAxBmM,EAASJ,WACL,IAAI+B,KACF3B,EAASJ,WAAWgC,cACpB5B,EAASJ,WAAWiC,WACpB7B,EAASJ,WAAWkC,UAAY,GAElC,KACNrN,KAAM,OACNY,SAAkC,KAAxB2K,EAASJ,aAAsB3N,EAAM8Q,KAC/ChQ,MAAOiN,EAASH,SAChBvM,SAAUgO,GACVG,aAAc,MACdlM,UAAU,IAmBd,OAFA0I,QAAQC,IAAI8B,GAEL7C,EACL,kBAACrG,EAAA,EAAD,MAEA,kBAAC,WAAD,KACE,kBAAC8E,EAAA,EAAD,CACEzJ,UAAU,cACV8J,KAAMyE,GACNpE,QAAS,kBAAMqE,IAAgB,KAE/B,kBAAC3O,EAAA,EAAD,CAAQG,UAAU,sCAChB,yBAAKA,UAAU,2BACZ0Q,EACC,yBAAK1Q,UAAU,oBACb,kBAAC8Q,EAAA,EAAD,OAGF,6BACG9O,EAAQC,KAAI,SAACC,GAAD,OACX,yBACEoG,IAAKpG,EAAG+M,IACRjP,UAAU,6DACVE,MAAO,CAAEmL,OAAQ,WACjBtD,QAAS,kBAAM+G,GAAY5M,IAC3BE,GAAIF,EAAG+M,KAEP,yBAAKjP,UAAU,uCACZkC,EAAGmN,OAEN,yBAAKrP,UAAU,4BACb,kBAACoK,EAAA,EAAD,CACE9I,KAAMY,EAAGmN,MACTjN,GAAIF,EAAG+M,IACPnK,QAAS+I,EAASD,MAAMxF,MACtB,SAACG,GAAD,OAASA,EAAI0G,MAAQ/M,EAAG+M,OAE1B9N,SAAU,kBAAM2N,GAAY5M,aAQ1C,kBAAC2K,EAAA,EAAD,CAAavK,KAAK,SAASyF,QAAS,kBAAMyG,IAAgB,KAA1D,UAMJ,6BACE,kBAAC3O,EAAA,EAAD,CAAQM,MAAOL,EAAMwJ,KAAKyH,UAAW7Q,MAAO,CAAE8Q,UAAW,KACvD,kBAACC,EAAA,EAAD,CACE3O,KAAMA,EACN0L,QAASA,EACT8B,UArEQ,WAChB1B,GAAQ,GACK,UAAT9L,GACFxC,EAAMoR,eAmEApH,KAAMA,IAER,0BAAM9J,UAAU,OAAO+P,SA7KT,SAAC5M,GACrBA,EAAM6C,iBACNsI,GAAiB,GACjB,IAAI6C,EAAY,2BACXtD,GADW,IAEdJ,WAAYI,EAASJ,WAAWyC,UAChCxC,SAAUG,EAASH,SAASwC,YAG1BD,EAAU,YACTnQ,EAAMsR,YAAYnP,KAAI,SAACC,GACxB,OAAIA,EAAG+M,MAAQpB,EAASoB,IACfkC,EAEFjP,MAGX4J,QAAQC,IAAIkE,GACZxB,IACGC,KAAK,iBAAkBuB,GACvB5G,MAAK,SAACsF,GACLL,GAAiB,GACjBxC,QAAQC,IAAI4C,GACO,MAAfA,EAAIwB,SACN/B,GAAQ,GACRH,EAAW,WACXE,EAAQ,eAGXS,OAAM,SAACC,GACNP,GAAiB,GAGjBF,GAAQ,GACRH,EAAW,SACXE,EAAQ,cA2IJ,kBAAC7D,EAAA,EAAD,CACEmC,aAAW,EACXb,UAAU,IACVjD,UAAQ,EACR3I,UAAU,WACVoL,SAAUtL,EAAM8Q,KAChB/E,MAAOgC,EAASF,WAChBxM,SAAU,SAACuJ,EAAU0F,EAAUxF,GAC7BsD,EAAQtD,GACJwF,GACFlC,EAAQ,KACRJ,GAAY,SAACjI,GAAD,mBAAC,eACRA,GADO,IAEV8H,WAAYjD,QAGdoD,GAAY,SAACjI,GAAD,mBAAC,eACRA,GADO,IAEV8H,WAAY,aAKpB,kBAACnK,EAAA,EAAD,CAAUG,KAAMA,IACfyL,GAAOnN,KAAI,SAACC,EAAI8E,GAAL,OACV,kBAAC,IAAD,eAAWsB,IAAKtB,GAAW9E,OAG7B,yBAAKlC,UAAU,YACZF,EAAM8Q,KACL,kBAAC/D,EAAA,EAAD,CACE7B,QAASqD,EACTnL,UAtKI,YACbmN,OAAOC,OAAOzC,GAAU5L,KAAI,SAACC,GAC9B,OAAW,OAAPA,GAAeA,IAAO,GACjB,GAEFA,MAGWqO,OAAM,SAACrO,GAAD,MAAiC,KAAzBA,EAAGiL,WAAWqD,UA+JpCxQ,UAAU,2BACVsC,KAAK,UAJP,UAQE,KACJ,kBAACuK,EAAA,EAAD,CACEvK,KAAK,SACLyF,QAAS,kBAAMjI,EAAMuR,OAAOvR,EAAMkH,QAClC9G,MAAO,CAAE6B,WAAYjC,EAAM8Q,KAAO,UAAY,WAC9C5Q,UAAU,4BAETF,EAAM8Q,KAAO,SAAW,c,OChM1B/L,iBAzGG,SAAC/E,GAAW,IAAD,EACKa,mBAAS,IADd,mBACpBkN,EADoB,KACVC,EADU,OAEGnN,oBAAS,GAFZ,mBAEpBqK,EAFoB,KAEXC,EAFW,OAGHtK,mBAAS,CAAE0L,SAAS,EAAO/C,KAAM,GAAItC,MAAO,KAHzC,mBAGpB4J,EAHoB,KAGdU,EAHc,KAKrBD,EAAS,SAACrK,GACdsK,EAAQ,CAAEjF,SAAS,EAAM/C,KAAMuE,EAAS7G,GAAQA,MAAOA,KAOzD9B,qBAAU,WACRqM,MACC,IAEH,IAAMA,EAAY,WAChBtG,GAAW,GACXwD,IACGC,KAAK,kBAAmB,CACvBsB,QAASlQ,EAAM8E,YAAc9E,EAAMwJ,KAAK2F,IAAM,OAE/C5F,MAAK,SAACsF,GACL7C,QAAQC,IAAI4C,EAAIrF,MAChB2B,GAAW,GACX6C,EAAY,YACPa,EAAIrF,KAAKrH,KAAI,SAACC,GAAD,mBAAC,eACZA,GADW,IAEduL,WAAY,IAAI+B,KAAKtN,EAAGuL,YACxBC,SAAU,IAAI8B,KAAKtN,EAAGwL,oBAI3BkB,OAAM,SAACC,GACN/C,QAAQC,IAAI8C,GACZ5D,GAAW,OAMjB,OAFAa,QAAQC,IAAIjM,EAAMwJ,MAEX0B,EACL,kBAAC,WAAD,KACE,kBAACrG,EAAA,EAAD,MACA,6BACA,kBAACA,EAAA,EAAD,MACA,6BACA,kBAACA,EAAA,EAAD,MACA,8BAEoB,IAApBkJ,EAASlM,OACX,kBAAC9B,EAAA,EAAD,CAAQG,UAAU,eACfF,EAAM8E,YACL,yBAAKmD,QAASjI,EAAM8P,QAClB,uBAAG5P,UAAU,iCAAiC6P,cAAY,UAE1D,KAEJ,yBAAK7P,UAAU,2BACb,6BACA,2CACA,6BACA,kBAAC6M,EAAA,EAAD,CAAa9E,QAAS,kBAAMjI,EAAM8H,QAAQwF,QAAQ,eAAlD,mBAKFwD,EAAKvE,QACP,kBAAC,EAAD,CACEzH,YAAa9E,EAAM8E,YACnB0E,KAAMsH,EAAKtH,KACXtC,MAAO4J,EAAK5J,MACZ4J,MAAI,EACJQ,YAAavD,EACbwD,OAlEiB,WACnBC,EAAQ,CAAEjF,SAAS,EAAO/C,KAAM,GAAItC,MAAO,MAkEzCkK,YAAaK,IAGf,kBAAC,WAAD,KACGzR,EAAM8E,YACL,kBAAC/E,EAAA,EAAD,CAAQG,UAAU,gDAChB,yBAAKA,UAAU,0BAA0B+H,QAASjI,EAAM8P,QACtD,uBAAG5P,UAAU,yBAAyB6P,cAAY,UAEpD,yBAAK7P,UAAU,kCACb,wBAAIA,UAAU,cAAcF,EAAMwJ,KAAKhI,QAGzC,KACHuM,EAAS5L,KAAI,SAACC,EAAI8E,GAAL,OACZ,kBAAC,EAAD,CACEpC,YAAa9E,EAAM8E,YACnBwM,YAAavD,EACbwD,OAAQA,EACR/I,IAAKpG,EAAG+M,IACRjI,MAAOA,EACP4J,MAAM,EACNtH,KAAMpH,Y,gQCtDDsP,G,OA9CO,SAAC1R,GACrB,IAAMC,EAAa,CACjB,2BACA,4BACA,2BACA,kCAGF,OACE,kBAAC,WAAD,KACE,0FAEgBD,EAAM2R,SAFtB,sGAKgB3R,EAAM4R,UALtB,mGAQc5R,EAAM6R,UARpB,6CASgB7R,EAAM6R,UATtB,yGAYc7R,EAAM8R,gBAZpB,6CAagB9R,EAAM8R,gBAbtB,gCAgBC9R,EAAMS,SACL,kBAAC,IAAD,CACEP,UAAWD,EAAWE,KAAK,KAC3BW,MAAOd,EAAM+R,YAEZ/R,EAAMS,UAGT,kBAAC,IAAD,CACEP,UAAWD,EAAWE,KAAK,KAC3BW,MAAOd,EAAM+R,WACb7O,KAAI,UAAKlD,EAAM+R,WAAX,MAEH/R,EAAMS,aCEFuR,EAvCF,SAAChS,GAAW,IAAD,EACEa,mBAAS,CAC/BoR,MAAO,EACPC,aAAc,EACdC,YAAa,EACbC,aAAc,EACdC,iBAAkB,GAClBC,kBAAmB,KAPC,gCASQzR,oBAAS,IATjB,mBASfqK,EATe,UAiBtB,OANA9F,qBAAU,WACRtB,gBACC,IAIIoH,EACL,kBAAC8F,EAAA,EAAD,MAEA,yBAAK9Q,UAAU,QACb,kBAACH,EAAA,EAAD,KACE,yBAAKG,UAAU,yBACb,kBAAC,EAAD,CAKE6R,WAAY,S,oJC+WTQ,EAvYC,SAACvS,GAAW,IAAD,EACKa,mBAAS,CACrCW,KAAM,GACNgR,OAAQ,KACRC,MAAO,GACPC,QAAS,GACTC,KAAM7J,EAAQ,OANS,mBAClB8J,EADkB,KACTC,EADS,OASahS,mBAAS,CAC7CW,KAAM,GACNiR,MAAO,GACPD,OAAQ,KACRE,QAAS,GACTC,KAAM7J,EAAQ,OAdS,mBASlBgK,EATkB,KASLC,EATK,KAiBnBjC,EAAOpG,mBAjBY,GAkBHA,mBAEgB7J,oBAAS,IApBtB,mBAoBlBmS,EApBkB,KAoBLC,EApBK,OAqBKpS,oBAAS,GArBd,mBAqBlBqS,EArBkB,KAqBTC,EArBS,OAsBDtS,oBAAS,GAtBR,mBAsBlBmJ,EAtBkB,KAsBZsE,EAtBY,OAuBKzN,mBAAS,IAvBd,mBAuBlBqN,EAvBkB,KAuBTC,EAvBS,OAwBDtN,mBAAS,WAxBR,mBAwBlB2B,EAxBkB,KAwBZ6L,EAxBY,OAyBKxN,oBAAS,GAzBd,mBAyBlBqK,EAzBkB,KAyBTC,EAzBS,OA0BiBtK,oBAAS,GA1B1B,oBA0BlB0N,GA1BkB,MA0BHC,GA1BG,SA2BO3N,oBAAS,GA3BhB,qBA2BlByP,GA3BkB,MA2BRrF,GA3BQ,SA4BKpK,oBAAS,GA5Bd,qBA4BlBuS,GA5BkB,MA4BTC,GA5BS,SA6BmBxS,oBAAS,GA7B5B,qBA6BFyS,IA7BE,gBA8BWzS,mBAAS,KA9BpB,qBA8BlB0S,GA9BkB,MA8BNC,GA9BM,SA+BW3S,mBAAS,SA/BpB,qBA+BlB4S,GA/BkB,MA+BNC,GA/BM,MAiCnBrE,GAAgB,SAAChM,GAAW,IAAD,EACPA,EAAM9B,OAAtBC,EADuB,EACvBA,KAAMV,EADiB,EACjBA,MACd+R,GAAW,SAAC9M,GAAD,mBAAC,eACPA,GADM,kBAERvE,EAAOV,QAIRwO,GAAS,CACX,CACE9N,KAAM,OACNoB,YAAa,OACb1B,YAAa8R,EAAc,aAAe,GAC1CxQ,KAAM,OACN1B,MAAO8R,EAAQpR,KACfH,SAAUgO,GACV/L,UAAU,EACVqQ,YAAY,GAEd,CACEnS,KAAM,QACNoB,YAAa,QACb1B,YAAa8R,EAAc,cAAgB,GAC3CxQ,KAAM,QACN1B,MAAO8R,EAAQH,MACfrP,UAAU,EACV/B,SAAUgO,GACV/L,UAAU,EACVqQ,YAAY,GAEd,CACEnS,KAAM,UACNoB,YAAa,UACb1B,YAAa8R,EAAc,gBAAkB,GAC7CxQ,KAAM,WACN1B,MAAO8R,EAAQF,QACfrR,SAAUgO,GACVsE,YAAY,IAIhBvO,qBAAU,WACRwO,OACC,IAEH,IAAMA,GAAU,WACdzI,GAAW,GACXwD,IACGC,KAAK,iBACLrF,MAAK,SAACsF,GACL1D,GAAW,GACQ,MAAf0D,EAAIwB,QACNwC,GAAW,SAAC9M,GAAD,mBAAC,eAAeA,GAAS8I,EAAIrF,SACxCuJ,GAAe,SAAChN,GAAD,mBAAC,eAAeA,GAAS8I,EAAIrF,WAE5CqJ,GAAW,SAAC9M,GAAD,mBAAC,eACPA,GADM,IAETvE,KAAM,GACNiR,MAAO,GACPD,OAAQ,KACRE,QAAS,GACTC,KAAM7J,EAAQ,UAEhBiK,GAAe,SAAChN,GAAD,mBAAC,eACXA,GADU,IAEbvE,KAAM,GACNiR,MAAO,GACPD,OAAQ,KACRE,QAAS,GACTC,KAAM7J,EAAQ,WAGlBkD,QAAQC,IAAI4C,MAEbC,OAAM,SAACC,GACN5D,GAAW,GACX0H,GAAW,SAAC9M,GAAD,mBAAC,eACPA,GADM,IAETvE,KAAM,GACNgR,OAAQ,KACRC,MAAO,GACPC,QAAS,GACTC,KAAM7J,EAAQ,UAEhBiK,GAAe,SAAChN,GAAD,mBAAC,eACXA,GADU,IAEbvE,KAAM,GACNgR,OAAQ,KACRC,MAAO,GACPC,QAAS,GACTC,KAAM7J,EAAQ,cA2BhB+K,GAAQ,WAEZ,MADqB,CAACjB,EAAQpR,KAAMoR,EAAQH,OACtBhC,OAAM,SAACrO,GAAD,MAAsB,KAAdA,EAAGsO,WAWnCoD,GAAkB,uCAAG,WAAO7N,GAAP,eAAAW,EAAA,yDACzByM,IAAW,GACXG,GAAc,UACY5R,IAAtBqE,EAAE1E,OAAOyH,MAAM,GAHM,oBAIvBsK,IAAkB,GAClBrI,GAAYxB,YAAcxD,EAAE1E,OAAOyH,MAAM,GAAGxH,OACvCiI,YAAcxD,EAAE1E,OAAOyH,MAAM,GAAGxH,MANd,wBAOrBgS,GAAc,mDACdvI,IAAY,GACZ4H,GAAW,SAAC9M,GAAD,sBACNA,MAVgB,gCAaZE,EAAE1E,OAAOyH,MAAM,GAAGE,KAAO,KAbb,wBAcrBsK,GAAc,6BACdvI,IAAY,GACZ4H,GAAW,SAAC9M,GAAD,sBACNA,MAjBgB,kCAqBrBoN,GAAW,GACXO,GAAc,SACdF,GAAc,oCAERvK,EAAW,SAAC8C,GAChB,IAAIgI,EAAiBhI,EAAM,GAAGmB,OAASnB,EAAM,GAAGvC,KAChDqJ,GAAW,SAAC9M,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4M,KAAMoB,OACvCT,IAAkB,GAClBU,GAAcD,IA7BK,UA+BfhL,YAAc,CAAC9C,EAAE1E,OAAOyH,MAAM,IAAK,CAAEE,KAAM,IAAOD,GA/BnC,gCAkCvBgC,IAAY,GACZuI,GAAc,mBACdX,GAAW,SAAC9M,GAAD,sBACNA,MArCkB,4CAAH,sDA0ClBiO,GAAgB,SAACjI,GACrByH,GAAc,gBACd7E,IACGC,KAAK,sBADR,2BACoCkE,GADpC,IACiDH,KAAM5G,KACpDxC,MAAK,SAACsF,GACL2E,GAAc,KACdxH,QAAQC,IAAI4C,EAAIrF,MAChB2J,GAAW,GACQ,MAAftE,EAAIwB,SACNlC,EAAW,qBACXG,GAAQ,GACRD,EAAQ,eAGXS,OAAM,SAACC,GACN8D,GAAW,SAAC9M,GAAD,mBAAC,eACPA,GADM,IAET4M,KAAMG,EAAYH,UAEpBQ,GAAW,GACXK,GAAc,0BACdrF,EAAW,yBACXG,GAAQ,GACRD,EAAQ,aAIR4F,GAAY,WAChBnD,EAAK9D,QAAQzF,SAcf,OACE,6BACG2D,EACC,kBAACqC,EAAA,EAAD,MACqB,IAAnBqF,EAAQ/Q,OACV,wBAAI3B,UAAU,2BACZ,6BACA,6BAFF,0BAMA,kBAAC,WAAD,KACE,kBAACH,EAAA,EAAD,CAAQG,UAAU,iBAChB,kBAACgU,EAAA,EAAD,CAAK1G,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKxN,UAAU,eACnC,yBAAKA,UAAU,WACb,2BACEyB,IAAKmP,EACLtO,KAAK,OACLpC,MAAO,CAAE+T,SAAU,WAAYvL,WAAY,UAC3CvH,SAAUyS,KAEM,OAAjBlB,EAAQD,OAAmBrC,IAAY8C,GACtC,yBACEhT,MAAO,CACLgU,gBACE,OACAtL,EAAQ,KACR,KAEJ+D,IAAI,IACJ3M,UAAS,4BACPgT,EAAU,mBAAqB,KAGjC,yBAAKjL,QAASiL,EAAU,aAAW,kBAAMe,OACvC,qCAIJ,yBACE7T,MAAO,CACLgU,gBAAiB,OAASxB,EAAQD,KAAO,KAE3C9F,IAAI,IACJ3M,UAAS,4BACPgT,EAAU,mBAAqB,KAGjC,yBAAKjL,QAASiL,EAAU,aAAW,kBAAMe,OACvC,qCAIN,8BAEF,kBAACvQ,EAAA,EAAD,CACEG,KAAM0P,GACN3P,MAAO6P,GACPvT,UAAU,oBAEZ,6BACA,6BACE,kBAAC6M,EAAA,EAAD,CACE7M,UAAW,MAAQ8S,EAAc,UAAY,aAC7CxQ,KAAK,SACLyF,QA5EE,WACZ6I,GACF+B,GAAW,SAAC9M,GAAD,mBAAC,eAAe+M,GAAhB,IAA6BH,KAAM5M,EAAK4M,UAErDM,GAAe,SAAClN,GAAD,OAAWA,OA0EXiN,EAAc,SAAW,QAE5B,6BACA,kBAAC7B,EAAA,EAAD,CACE3O,KAAMA,EACN0L,QAASA,EACT8B,UArKE,WAChB1B,GAAQ,GACR2E,GAAe,GACfO,GAAc,KACdE,GAAc,SACD,UAATlR,GAAkBoR,MAiKR5J,KAAMA,IAEPgJ,EACC,0BAAM9S,UAAU,OAAO+P,SApMjB,SAAC5M,GACrBA,EAAM6C,iBACNsI,IAAiB,GACjBG,IACGC,KAAK,sBAAuBgE,GAC5BrJ,MAAK,SAACsF,GACL7C,QAAQC,IAAI4C,EAAIrF,MAChBgF,IAAiB,GACE,MAAfK,EAAIwB,SACNlC,EAAW,qBACXG,GAAQ,GACRD,EAAQ,eAGXS,OAAM,SAACC,GACNP,IAAiB,GACjBL,EAAW,yBACXG,GAAQ,GACRD,EAAQ,cAmLKiB,GAAOnN,KAAI,SAACC,EAAI8E,GAAL,OACV,kBAAC,IAAD,eAAWsB,IAAKtB,GAAW9E,OAE7B,kBAAC2K,EAAA,EAAD,CACE7B,QAASqD,GACTnL,UAAWyQ,KACX3T,UAAU,cACVsC,KAAK,UAJP,WAUF,yBAAKtC,UAAU,QACZoP,GAAOnN,KAAI,SAACC,EAAI8E,GAAL,OACV,kBAAC,IAAD,eAAWsB,IAAKtB,GAAW9E,EAA3B,CAA+BgB,UAAU,QAE3C,yBAAKhD,MAAO,CAAEwI,WAAY,WACxB,kBAACmE,EAAA,EAAD,CACE7B,QAASqD,GACTnL,UAAWyQ,KACX3T,UAAU,cACVsC,KAAK,UAJP,cAaV,kBAAC0R,EAAA,EAAD,CAAK1G,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKxN,UAAU,eACnC,yBAAKA,UAAU,WACO,OAAnB0S,EAAQJ,aAAsC5Q,IAAnBgR,EAAQJ,OAClC,6BACE,yBAAKtS,UAAU,qBAGjB,yBAAKA,UAAU,2BACb,yBACE0M,IAAKgG,EAAQJ,OACb3F,IAAI,IACJhH,MAAM,OACNiH,OAAO,SAET,6BACE,6BACA,4BACE7E,QAlIF,YChQf,SAAoBoM,GACzB,IAAIC,EAAM,IAAIC,IAEdD,EAAIE,SAASH,EAAS,OAAQ,GAAI,GAAI,IAAK,KAC3CC,EAAIG,OAAO,WACXH,EAAII,KAAK,eD4PPC,CAAW/B,EAAQJ,SAkICtS,UAAU,0BACVsC,KAAK,UAHP,oB,OEzTPoS,uBAPS,SAACC,GACvB,MAAO,CACLC,KAA4B,OAAtBD,EAAME,MAAMC,MAClBrC,KAAMkC,EAAME,MAAMpC,QAIPiC,EA9DD,SAAC5U,GACb,IAAIiV,EAAe,CACjB,CAAEzT,KAAM,YAAaqG,GAAI,SACzB,CACEQ,SAAU,CACRL,QAAS,SACT9F,QAAS,CACP,CAAEV,KAAM,YAAaqG,GAAI,aACzB,CAAErG,KAAM,aAAcqG,GAAI,iBAIhC,CAAErG,KAAM,SAAUqG,GAAI,WACtB,CACEc,UACE,yBACEzI,UAAU,WACVE,MAAO,CACLgU,gBACE,QACgB,OAAfpU,EAAM2S,KACH3S,EAAM2S,KACN7J,EAAQ,MACZ,OAIRjB,GAAI,aAGR,OACE,6BACE,kBAACqN,EAAA,EAAD,CACE9U,MAAO,CAAE6B,WAAY,eACrBmG,OAAQ6M,EACRjN,QACE,yBACE4E,IAAK9D,EAAQ,IACb+D,IAAI,WAKV,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsI,KAAK,QAAQxM,UAAWyM,YAAUpD,KACzC,kBAAC,IAAD,CAAOmD,KAAK,YAAYxM,UAAWyM,YAAUC,OAC7C,kBAAC,IAAD,CAAOF,KAAK,aAAaxM,UAAWyM,YAAUE,OAC9C,kBAAC,IAAD,CAAOH,KAAK,WAAWxM,UAAWyM,YAAU7C,KAC5C,kBAAC,IAAD,CAAU1K,GAAI7H,EAAM8U,KAAO,WAAa","file":"static/js/9.0d054f67.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { CardTitle } from \"reactstrap\";\r\nimport \"./MyCard.css\";\r\n\r\nconst MyCard = (props) => {\r\n  let classNames = [\"my-card\", props.className ? props.className : \"\"];\r\n  return (\r\n    <div className={classNames.join(\" \")} style={props.style}>\r\n      {props.title ? (\r\n        <Fragment>\r\n          <CardTitle>\r\n            <h4\r\n              className=\"card-title-responsive\"\r\n              style={{\r\n                ...props.titleStyle,\r\n                textAlign: props.titleCenter ? \"center\" : \"left\",\r\n              }}\r\n            >\r\n              {props.title}\r\n            </h4>\r\n          </CardTitle>\r\n        </Fragment>\r\n      ) : null}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","module.exports = __webpack_public_path__ + \"static/media/Default-Profile.9acfe78b.png\";","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./Date.css\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nconst DateInput = (props) => {\r\n  const [startDate, setStartDate] = useState(props.value);\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <DatePicker\r\n        {...props}\r\n        placeholderText={props.placeholder}\r\n        className=\"date\"\r\n        dateFormat=\"dd-MM-yyyy\"\r\n        selected={startDate}\r\n        onChange={(date) => {\r\n          setStartDate(date);\r\n          props.onChange({\r\n            target: {\r\n              value: date,\r\n              name: props.name,\r\n            },\r\n          });\r\n        }}\r\n        // calendarClassName=\"rasta-stripes\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst SelectInput = (props) => {\r\n  return (\r\n    <Select\r\n      className=\"react-select\"\r\n      classNamePrefix=\"react-select\"\r\n      placeholder={props.placeholder}\r\n      ref={props.ref}\r\n      value={\r\n        props.value !== undefined && props.value !== null\r\n          ? props.value.length === 0\r\n            ? null\r\n            : { value: props.value, label: props.value }\r\n          : null\r\n      }\r\n      onChange={(value) =>\r\n        props.onChange(\r\n          value !== null && value !== undefined ? value.label : null,\r\n          props.name\r\n        )\r\n      }\r\n      name={props.name}\r\n      styles={{\r\n        control: (styles) => ({\r\n          background: \"rgba(230, 230, 230, 0.823)\",\r\n          ...styles,\r\n          ...props.style,\r\n        }),\r\n      }}\r\n      options={\r\n        props.options === null\r\n          ? []\r\n          : [...props.options.map((el) => ({ value: el, label: el }))]\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport uniqueid from \"uniqid\";\r\nimport DateInput from \"../Date/Date\";\r\n\r\nimport Select from \"../Select/Select\";\r\n\r\nconst EachField = (props) => {\r\n  let id = uniqueid();\r\n  const getFormField = () => {\r\n    switch (props.type) {\r\n      case \"text\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"textarea\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Select\r\n                  style={{ background: \"#fafafa\" }}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(value, name) => {\r\n                    props.onChange(value, name);\r\n                  }}\r\n                  options={props.options}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Select\r\n                style={{ background: \"#fafafa\" }}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(value, name) => {\r\n                  props.onChange(value, name);\r\n                }}\r\n                options={props.options}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n\r\n      case \"date\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <DateInput\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <DateInput\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      default:\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            <Label for={id}>{props.displayName}</Label>\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n    }\r\n  };\r\n  return getFormField();\r\n};\r\n\r\nexport default EachField;\r\n\r\n// const changeHandler = (event) => {\r\n//   const { name, value } = event.target;\r\n//   setFormData((prev) => ({\r\n//     ...prev,\r\n//     [name]: value,\r\n//   }));\r\n// };\r\n\r\n// const selectChangeHandler = (value, name) => {\r\n//   setFormData((prev) => ({\r\n//     ...prev,\r\n//     [name]: value,\r\n//   }));\r\n// };\r\n\r\n// var schema = [\r\n//   {\r\n//     name: \"name\",\r\n//     displayName: \"Name\",\r\n//     placeholder: \"Enter Name\",\r\n//     type: \"text\",\r\n//     value: formData.name,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"address\",\r\n//     displayName: \"Address\",\r\n//     placeholder: \"Enter Address\",\r\n//     type: \"textarea\",\r\n//     value: formData.address,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"country\",\r\n//     displayName: \"Country\",\r\n//     placeholder: \"Enter Country\",\r\n//     type: \"select\",\r\n//     value: formData.country,\r\n//     onChange: selectChangeHandler,\r\n//     options: [\"India\", \"Japan\"],\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"email\",\r\n//     displayName: \"Email\",\r\n//     placeholder: \"Enter Email\",\r\n//     type: \"email\",\r\n//     value: formData.email,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"contactPerson\",\r\n//     displayName: \"Contact Person\",\r\n//     placeholder: \"Enter Contact Person\",\r\n//     type: \"text\",\r\n//     value: formData.contactPerson,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"contactNumber\",\r\n//     displayName: \"Contact Number\",\r\n//     placeholder: \"Enter Contact Number\",\r\n//     type: \"number\",\r\n//     value: formData.contactNumber,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"latitude\",\r\n//     type: \"number\",\r\n//     displayName: \"Latitude\",\r\n//     placeholder: \"Enter Latitude\",\r\n//     value: formData.latitude,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"longitude\",\r\n//     type: \"number\",\r\n//     displayName: \"Longitude\",\r\n//     placeholder: \"Enter Longitude\",\r\n//     value: formData.longitude,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n// ];\r\n","import React from \"react\";\r\nimport \"./FormInfo.css\";\r\n\r\nconst FormInfo = (props) => {\r\n  let classes = [\"info\", props.className ? props.className : \"\"];\r\n  return (\r\n    <div className={classes.join(\" \")}>\r\n      <p\r\n        className=\"small text-center remove-para-margin\"\r\n        style={{ color: props.color ? props.color : \"coral\" }}\r\n      >\r\n        {props.info}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInfo;\r\n","module.exports = __webpack_public_path__ + \"static/media/default-image.5cd326b3.png\";","// const getFontSize = (textLength) => {\r\n//   const baseSize = 15;\r\n//   if (textLength >= baseSize) {\r\n//     textLength = baseSize - 2;\r\n//   }\r\n//   const fontSize = baseSize - textLength;\r\n//   return `${fontSize}vw`;\r\n// };\r\n\r\n// export const adjustTextSize = () => {\r\n//   const boxes = document.querySelectorAll(\"#adjust\");\r\n\r\n//   boxes.forEach((box) => {\r\n//     box.style.fontSize = getFontSize(box.textContent.length);\r\n//   });\r\n// };\r\n\r\nimport $ from \"jquery\";\r\n\r\nexport const adjustTextSize = () => {\r\n  var el, elements, _i, _len, _results;\r\n  elements = $(\".resize\");\r\n  if (elements.length < 0) {\r\n    return;\r\n  }\r\n  _results = [];\r\n  for (_i = 0, _len = elements.length; _i < _len; _i++) {\r\n    el = elements[_i];\r\n    _results.push(\r\n      (function (el) {\r\n        var resizeText, _results1;\r\n        resizeText = function () {\r\n          var elNewFontSize;\r\n          elNewFontSize =\r\n            parseInt($(el).css(\"font-size\").slice(0, -2)) - 1 + \"px\";\r\n          return $(el).css(\"font-size\", elNewFontSize);\r\n        };\r\n        _results1 = [];\r\n        while (el.scrollHeight > el.offsetHeight) {\r\n          _results1.push(resizeText());\r\n        }\r\n        return _results1;\r\n      })(el)\r\n    );\r\n  }\r\n  return _results;\r\n};\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport MyCard from \"../../../../../UI/MyCard/MyCard\";\r\nimport \"./SAddOfferLoader.css\";\r\n\r\nconst SAddOfferLoader = (props) => {\r\n  return (\r\n    <div>\r\n      {props.fromPartner ? (\r\n        <Fragment>\r\n          <MyCard className=\"full-width flex-center partner-view_offer-title\">\r\n            <div className=\"store-name-title-loader skeleton-box\"></div>\r\n          </MyCard>\r\n          <br />\r\n        </Fragment>\r\n      ) : null}\r\n      <MyCard className=\"flex-column\">\r\n        <div className=\"store-name-title-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"offer-image-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"upload-button-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"add-offer-textbox-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"add-offer-textbox-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"add-offer-textbox-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"add-offer-textbox-loader skeleton-box\"></div>\r\n        <br />\r\n        <div className=\"upload-button-loader skeleton-box\"></div>\r\n      </MyCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SAddOfferLoader;\r\n","// import React, { useState } from \"react\";\r\n// import { withRouter } from \"react-router\";\r\n// import {\r\n//   Collapse,\r\n//   Navbar,\r\n//   NavbarToggler,\r\n//   NavbarBrand,\r\n//   Nav,\r\n//   NavItem,\r\n//   NavLink,\r\n// } from \"reactstrap\";\r\n\r\n// const Sidebar = (props) => {\r\n//   const [collapsed, setCollapsed] = useState(true);\r\n\r\n//   const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n//   const goto = (event, to) => {\r\n//     event.preventDefault();\r\n//     props.history.push(to);\r\n//     toggleNavbar();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={props.style}>\r\n//       <Navbar color=\"faded\" light style={props.style}>\r\n//         <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n//           {props.heading}\r\n//         </NavbarBrand>\r\n//         <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n//         <Collapse isOpen={!collapsed} navbar>\r\n//           <Nav navbar>\r\n//             <br />\r\n//             {props.routes.map((el, index) => (\r\n//               <NavItem key={index}>\r\n//                 <NavLink href=\"#\" onClick={(event) => goto(event, el.to)}>\r\n//                   <p className=\"bold large\">{el.name}</p>\r\n//                 </NavLink>\r\n//               </NavItem>\r\n//             ))}\r\n//           </Nav>\r\n//         </Collapse>\r\n//       </Navbar>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default withRouter(Sidebar);\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport $ from \"jquery\";\r\n\r\nconst Sidebar = (props) => {\r\n  const [checked, setChecked] = useState(false);\r\n  const [activeRoute, setActiveRoute] = useState(props.location.pathname);\r\n\r\n  useEffect(() => {\r\n    // if (\r\n    //   props.location.pathname !== undefined &&\r\n    //   props.location.pathname !== null\r\n    // ) {\r\n    //   setActiveRoute(props.location.pathname);\r\n    // } else {\r\n    //   setActiveRoute(\"\");\r\n    // }\r\n\r\n    window.onscroll = function () {\r\n      scrollFunction();\r\n    };\r\n\r\n    function scrollFunction() {\r\n      if (\r\n        document.getElementById(\"navbar\") !== null &&\r\n        document.getElementById(\"navbar\") !== undefined\r\n      ) {\r\n        if (\r\n          document.body.scrollTop > 10 ||\r\n          document.documentElement.scrollTop > 10\r\n        ) {\r\n          document.getElementById(\"navbar\").style.padding = \"0px 20px\";\r\n          document.getElementById(\"navbar\").style.width = \"100vw\";\r\n        } else {\r\n          document.getElementById(\"navbar\").style.padding = \"10px 20px\";\r\n          document.getElementById(\"navbar\").style.width = \"95vw\";\r\n        }\r\n      }\r\n    }\r\n    $(document).ready(function () {\r\n      $(\".nav .dropdown-menu\")\r\n        .prev(\"a\")\r\n        .on(\"click\", function (e) {\r\n          e.preventDefault();\r\n          $(this).parent().find(\".dropdown-menu\").slideToggle();\r\n        });\r\n    });\r\n\r\n    $(document).ready(function () {\r\n      function moveMarker() {\r\n        var activeNav = $(\".active-route a\");\r\n        var activewidth = $(activeNav).width();\r\n        var activePadLeft = parseFloat($(activeNav).css(\"padding-left\"));\r\n        var activePadRight = parseFloat($(activeNav).css(\"padding-right\"));\r\n        var totalWidth = activewidth + activePadLeft + activePadRight;\r\n\r\n        var precedingAnchorWidth = anchorWidthCounter();\r\n\r\n        // TODO:\r\n        // Find the total widths of all of the anchors\r\n        // to the left of the active anchor.\r\n        var activeMarker = $(\".active-marker\");\r\n        if ($(\".active-route a\").hasClass(\".hide-marker\")) {\r\n          $(activeMarker).css(\"display\", \"none\");\r\n          $(activeMarker).css(\"left\", precedingAnchorWidth + 40);\r\n        } else {\r\n          $(activeMarker).css(\"display\", \"block\");\r\n\r\n          $(activeMarker).css(\"width\", totalWidth);\r\n\r\n          $(activeMarker).css(\"left\", precedingAnchorWidth + 40);\r\n        }\r\n\r\n        // TODO:\r\n        // Using the calculated total widths of preceding anchors,\r\n        // Set the left: css value to that number.\r\n      }\r\n      moveMarker();\r\n\r\n      function anchorWidthCounter() {\r\n        var anchorWidths = 0;\r\n        var a;\r\n        var aWidth;\r\n        var aPadLeft;\r\n        var aPadRight;\r\n        var aTotalWidth;\r\n        $(\".nav-links li\").each(function (index, elem) {\r\n          var activeTest = $(elem).hasClass(\"active-route\");\r\n          if (activeTest) {\r\n            // Break out of the each function.\r\n            return false;\r\n          }\r\n\r\n          a = $(elem).find(\"a\");\r\n          aWidth = a.width();\r\n          aPadLeft = parseFloat(a.css(\"padding-left\"));\r\n          aPadRight = parseFloat(a.css(\"padding-right\"));\r\n          aTotalWidth = aWidth + aPadLeft + aPadRight;\r\n\r\n          anchorWidths = anchorWidths + aTotalWidth;\r\n        });\r\n\r\n        return anchorWidths;\r\n      }\r\n\r\n      $(\".nav-links a\").click(function (e) {\r\n        e.preventDefault();\r\n        $(\".nav-links li\").removeClass(\"active-route\");\r\n        $(this).parents(\"li\").addClass(\"active-route\");\r\n        moveMarker();\r\n      });\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"hello\");\r\n  // }, []);\r\n\r\n  const goto = (event, to) => {\r\n    event.preventDefault();\r\n    props.history.push(to);\r\n    toggle();\r\n  };\r\n\r\n  const toggle = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar blurred-nav\" id=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <div className=\"nav-header\">\r\n            <div className=\"logo\">\r\n              {/* <a href=\"#\">Furkan Giray</a> */}\r\n              {props.heading}\r\n            </div>\r\n          </div>\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            id=\"menu-toggle\"\r\n            onClick={toggle}\r\n          />\r\n          {props.showOnMobile ? (\r\n            <div className=\"show-on-mobile\">{props.showOnMobile}</div>\r\n          ) : null}\r\n          <label htmlFor=\"menu-toggle\" className=\"menu-show\">\r\n            <i className=\"fa fa-bars\"></i>\r\n          </label>\r\n\r\n          <div className=\"nav\">\r\n            <ul className=\"nav-links\">\r\n              {props.routes.map((el, index) =>\r\n                el.dropdown ? (\r\n                  <li\r\n                    className={\r\n                      \"nav-item has-dropdown indicate-active drop\" +\r\n                      (el.dropdown.options.some((elem) =>\r\n                        window.location.href.includes(elem.to)\r\n                      )\r\n                        ? \" active-route\"\r\n                        : // : activeRoute === \"\"\r\n                          // ? el.initialActive\r\n                          //   ? \" active-route\"\r\n                          //   : \"\"\r\n                          \"\")\r\n                      // (el.dropdown.options.some(\r\n                      //   (elem) => elem.to === activeRoute\r\n                      // )\r\n                      //   ? \" active-route\"\r\n                      //   : activeRoute === \"\"\r\n                      //   ? el.initialActive\r\n                      //     ? \" active-route\"\r\n                      //     : \"\"\r\n                      //   : \"\")\r\n                      // (el.initialActive ? \" active-route\" : \"\")\r\n                    }\r\n                    key={index}\r\n                  >\r\n                    <a href=\"#\" className=\"nav-link\">\r\n                      {el.dropdown.heading}\r\n                    </a>\r\n                    <ul className=\"dropdown-menu\">\r\n                      {el.dropdown.options.map((ele, ind) => (\r\n                        <li className=\"nav-item\" key={ind}>\r\n                          <a\r\n                            className=\"nav-link font\"\r\n                            href=\"#\"\r\n                            onClick={(event) => goto(event, ele.to)}\r\n                          >\r\n                            {ele.name}\r\n                          </a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </li>\r\n                ) : el.component ? (\r\n                  <li\r\n                    className={\r\n                      \"nav-item nav-component indicate-active\" +\r\n                      (window.location.href.includes(el.to)\r\n                        ? \" active-route\"\r\n                        : \"\")\r\n                      // (el.initialActive ? \" active-route\" : \"\")\r\n                    }\r\n                    key={index}\r\n                    onClick={(event) => goto(event, el.to)}\r\n                  >\r\n                    <a\r\n                      style={{ visibility: \"hidden\" }}\r\n                      className=\"hide-marker\"\r\n                    ></a>\r\n                    {el.component}\r\n                  </li>\r\n                ) : (\r\n                  <li\r\n                    className={\r\n                      \"nav-item indicate-active\" +\r\n                      (window.location.href.includes(el.to)\r\n                        ? \" active-route\"\r\n                        : \"\")\r\n                      // (activeRoute === el.to\r\n                      //   ? \" active-route\"\r\n                      //   : activeRoute === \"\"\r\n                      //   ? el.initialActive\r\n                      //     ? \" active-route\"\r\n                      //     : \"\"\r\n                      //   : \"\")\r\n                    }\r\n                    key={index}\r\n                  >\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(event) => goto(event, el.to)}\r\n                      className=\"nav-link font\"\r\n                    >\r\n                      {el.name}\r\n                    </a>\r\n                  </li>\r\n                )\r\n              )}\r\n\r\n              <label htmlFor=\"menu-toggle\" className=\"menu-hide\">\r\n                <i className=\"fa fa-times\"></i>\r\n              </label>\r\n            </ul>\r\n            <i className=\"active-marker drop\"></i>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div className=\"dummy-div\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","const Compress = require(\"compress.js\");\r\nconst compress = new Compress();\r\n\r\nexport const compressImage = async (files, options, callBack) => {\r\n  compress\r\n    .compress(files, {\r\n      size: options.size ? options.size : 2, // the max size in MB, defaults to 2MB\r\n      quality: options.quality ? options.quality : 0.75, // the quality of the image, max is 1,\r\n      maxWidth: 1920, // the max width of the output image, defaults to 1920px\r\n      maxHeight: 1920, // the max height of the output image, defaults to 1920px\r\n      resize: options.resize !== undefined ? options.resize : false, // defaults to true, set false if you do not want to resize the image width and height\r\n    })\r\n    .then((data) => {\r\n      // console.log(data[0].prefix + data[0].data);\r\n      callBack([...data]);\r\n      //   return [...data];\r\n    });\r\n};\r\n","export const validateImage = (name) => {\r\n  return (\r\n    name.endsWith(\".jpg\") ||\r\n    name.endsWith(\".jpeg\") ||\r\n    name.endsWith(\".png\") ||\r\n    name.endsWith(\".JPG\") ||\r\n    name.endsWith(\".JPEG\") ||\r\n    name.endsWith(\".PNG\") ||\r\n    name.endsWith(\".JFIF\") ||\r\n    name.endsWith(\".jfif\") ||\r\n    name.endsWith(\".webp\") ||\r\n    name.endsWith(\".WEBP\")\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Modal = (props) => {\r\n  let outerClassNames = [\"my-modal\", props.className];\r\n  let innerClassNames = [\"modal-content\", props.contentClassName];\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    if (props.show) {\r\n      body.style.overflowY = \"hidden\";\r\n    } else {\r\n      body.style.overflowY = \"\";\r\n    }\r\n  }, [props.show]);\r\n  return (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={300}\r\n      classNames=\"alert\"\r\n      unmountOnExit\r\n    >\r\n      <div {...props} className={outerClassNames.join(\" \")}>\r\n        <div onClick={props.onClose} className=\"outer-modal\"></div>\r\n        <div className={innerClassNames.join(\" \")}>{props.children}</div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./CheckBox.css\";\r\n\r\nconst CheckBox = (props) => {\r\n  return (\r\n    <div className=\"round\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={props.id || props.name}\r\n        onChange={props.onChange}\r\n        name={props.name}\r\n        checked={props.checked}\r\n        {...props}\r\n      />\r\n      <label htmlFor={props.name}></label>\r\n      <span style={{ marginLeft: \"28px\" }}>{props.displayName}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","export const validateImage = (name) => {\r\n  return (\r\n    name.endsWith(\".jpg\") ||\r\n    name.endsWith(\".jpeg\") ||\r\n    name.endsWith(\".png\") ||\r\n    name.endsWith(\".JPG\") ||\r\n    name.endsWith(\".JPEG\") ||\r\n    name.endsWith(\".PNG\") ||\r\n    name.endsWith(\".JFIF\") ||\r\n    name.endsWith(\".jfif\") ||\r\n    name.endsWith(\".webp\") ||\r\n    name.endsWith(\".WEBP\")\r\n  );\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport { validateImage } from \"./validateImage\";\r\nimport AsyncButton from \"../AsyncButton/AsyncButton\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const imageRef = useRef();\r\n  const [imageurl, setImageUrl] = useState(\r\n    props.defaultImage ? props.defaultImage : require(\"./default-image.png\")\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const [validty, setValidity] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const drop = document.querySelectorAll(\".imagePreview\");\r\n    drop.forEach((el) => {\r\n      if (props.editable === false) {\r\n        el.style.cursor = \"no-drop\";\r\n      } else {\r\n        el.addEventListener(\"dragover\", (e) => {\r\n          e.preventDefault();\r\n          el.classList.add(\"dotted\");\r\n        });\r\n        [\"dragleave\", \"dragend\"].forEach((type) =>\r\n          el.addEventListener(type, (e) => {\r\n            el.classList.remove(\"dotted\");\r\n          })\r\n        );\r\n\r\n        el.addEventListener(\"drop\", (e) => {\r\n          e.preventDefault();\r\n          if (e.dataTransfer.files.length) {\r\n            imageChange({ target: e.dataTransfer });\r\n            el.classList.remove(\"dotted\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.onChange(imageurl, validty, error);\r\n  }, [imageurl, validty, error]);\r\n\r\n  const imageChange = (e) => {\r\n    if (props.editable !== false) {\r\n      if (e.target.files[0] !== undefined) {\r\n        setLoading(true);\r\n        setValidity(validateImage(e.target.files[0].name));\r\n        if (!validateImage(e.target.files[0].name)) {\r\n          setError(\"Choose only .jpeg / .jpg / .png / .jfif / .webp\");\r\n          setLoading(false);\r\n          return setValidity(false);\r\n        } else if (props.sizeLimit) {\r\n          if (e.target.files[0].size > parseInt(props.sizeLimit) * 10000) {\r\n            if (props.compress) {\r\n              const reRender = (image) => {\r\n                setImageUrl(image);\r\n                setLoading(false);\r\n              };\r\n              return compressImage(\r\n                [e.target.files[0]],\r\n                { size: props.sizeLimit ? parseInt(props.sizeLimit) : 1 },\r\n                reRender\r\n              );\r\n            } else {\r\n              setError(\"Size should be within \" + props.sizeLimit + \" MB\");\r\n              setLoading(false);\r\n              setValidity(false);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        // if (e.target.files[0] !== undefined) {\r\n        console.log(\"after compress\");\r\n        let image = e.target.files[0];\r\n        var fd = new FileReader();\r\n        fd.readAsDataURL(image);\r\n        fd.onload = (e) => {\r\n          setImageUrl(e.target.result);\r\n          setLoading(false);\r\n        };\r\n      } else {\r\n        setValidity(false);\r\n        setError(\"No file Choosen\");\r\n        setImageUrl(\r\n          props.defaultImage\r\n            ? props.defaultImage\r\n            : require(\"./default-image.png\")\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    imageRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"flex-start\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      {props.needPreview ? (\r\n        <div className=\"imagePreview\">\r\n          {loading ? (\r\n            props.defaultImage ? (\r\n              props.defaultImage\r\n            ) : (\r\n              <img\r\n                src={\r\n                  props.defaultImage\r\n                    ? props.defaultImage\r\n                    : require(\"./default-image.png\")\r\n                }\r\n                alt=\"preview\"\r\n                className={\"image \" + props.className + \" skeleton-loading\"}\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  ...props.style,\r\n                }}\r\n              />\r\n            )\r\n          ) : (\r\n            <img\r\n              src={\r\n                props.image === null\r\n                  ? props.defaultImage\r\n                    ? props.defaultImage\r\n                    : require(\"./default-image.png\")\r\n                  : props.image\r\n              }\r\n              alt=\"preview\"\r\n              className={\"image \" + props.className}\r\n              style={{\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n                ...props.style,\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n      <input\r\n        type=\"file\"\r\n        ref={imageRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={(event) => imageChange(event)}\r\n      />\r\n      {props.editable !== false ? (\r\n        <AsyncButton\r\n          loading={loading}\r\n          color=\"success\"\r\n          type=\"button\"\r\n          onClick={handleClick}\r\n        >\r\n          <p style={{ color: \"white\", margin: 0 }}>Upload Image</p>\r\n        </AsyncButton>\r\n      ) : null}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n\r\n// size limit in MB\r\n\r\n// Compress Image\r\n\r\nconst Compress = require(\"compress.js\");\r\nconst compress = new Compress();\r\n\r\nexport const compressImage = async (files, options, callBack) => {\r\n  compress\r\n    .compress(files, {\r\n      size: options.size ? options.size : 2, // the max size in MB, defaults to 2MB\r\n      quality: options.quality ? options.quality : 0.75, // the quality of the image, max is 1,\r\n      maxWidth: 1920, // the max width of the output image, defaults to 1920px\r\n      maxHeight: 1920, // the max height of the output image, defaults to 1920px\r\n      resize: options.resize !== undefined ? options.resize : false, // defaults to true, set false if you do not want to resize the image width and height\r\n    })\r\n    .then((data) => {\r\n      // console.log(data[0].prefix + data[0].data);\r\n      callBack(data[0].prefix + data[0].data);\r\n      // callBack([...data]);\r\n      //   return [...data];\r\n    });\r\n};\r\n","export function numberWithComma(x) {\r\n  if (x !== undefined && x !== null) {\r\n    if (x.toString().length !== 0 && x.toString() !== \"NaN\") {\r\n      return x\r\n        .toString()\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        .toString();\r\n    } else {\r\n      return \"\";\r\n    }\r\n  } else return \"\";\r\n}\r\n","import React from \"react\";\r\nimport Col from \"reactstrap/lib/Col\";\r\nimport MyCard from \"../../../../../UI/MyCard/MyCard\";\r\nimport \"./EachStoreLoader.css\";\r\n\r\nconst EachStoreLoader = (props) => {\r\n  return (\r\n    <MyCard className=\"flex-row wrap\">\r\n      <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"flex-column\">\r\n        <div className=\"partner-logo skeleton-box\"></div>\r\n        <div className=\"form\">\r\n          <br />\r\n          <div className=\"skeleton-box field-label-loader\"></div>\r\n          <div className=\"profile-field-loader skeleton-box\"></div>\r\n          <br />\r\n          <br />\r\n          <div className=\"skeleton-box field-label-loader\"></div>\r\n          <div className=\"profile-field-loader skeleton-box\"></div>\r\n          <br />\r\n          <br />\r\n          <div className=\"skeleton-box field-label-loader\"></div>\r\n          <div className=\"profile-field-loader skeleton-box\"></div>\r\n          <br />\r\n        </div>\r\n      </Col>\r\n      <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"flex-center\">\r\n        <div className=\"qr-code skeleton-box\"></div>\r\n      </Col>\r\n    </MyCard>\r\n  );\r\n};\r\n\r\nexport default EachStoreLoader;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport EachField from \"../../../../UI/FormField/FormField\";\r\nimport MyCard from \"../../../../UI/MyCard/MyCard\";\r\nimport { axiosInstance } from \"../../../../Utility/axiosInstance\";\r\nimport \"./AddOffer.css\";\r\nimport Alert from \"../../../../UI/Alert/Alert\";\r\nimport AsyncButton from \"../../../../UI/AsyncButton/AsyncButton\";\r\nimport ImageUpload from \"../../../../UI/ImageUpload/ImageUpload\";\r\nimport FormInfo from \"../../../../UI/FormInfo/FormInfo\";\r\nimport Modal from \"../../../../UI/Modal/Modal\";\r\nimport CheckBox from \"../../../../UI/CheckBox/CheckBox\";\r\nimport { withRouter } from \"react-router\";\r\nimport SAddOfferLoader from \"./SAddOfferLoader/SAddOfferLoader\";\r\n\r\nconst AddOffer = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    offerStart: \"\",\r\n    offerEnd: \"\",\r\n    offerImage: null,\r\n    users: [],\r\n  });\r\n  const [options, setOptions] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [info, setInfo] = useState(\" \");\r\n  const [type, setType] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [showDropDown, setShowDropDown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .post(props.fromPartner ? \"/listuserspartner\" : \"/listusers\")\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setOptions([...res.data]);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setOptions([]);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const storeChange = (element) => {\r\n    let included = formData.users.some((el) => el._id === element._id);\r\n    if (!included)\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        users: [...prev.users, element],\r\n      }));\r\n    else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        users: [...prev.users.filter((el) => el._id !== element._id)],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"startDate\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        offerEnd: \"\",\r\n      }));\r\n    } else\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n  };\r\n\r\n  // const selectChangeHandler = (value, name) => {\r\n  //   setFormData((prev) => ({\r\n  //     ...prev,\r\n  //     [name]: value,\r\n  //   }));\r\n  // };\r\n\r\n  var schema = [\r\n    {\r\n      name: \"users\",\r\n      style: { cursor: \"pointer\" },\r\n      displayName: \"Users\",\r\n      placeholder: \"Select Users\",\r\n      required: true,\r\n      value: formData.users.map((el) => el.phone + \", \"),\r\n      onChange: () => {},\r\n      onClick: () => setShowDropDown(true),\r\n      autoComplete: \"off\",\r\n    },\r\n    {\r\n      name: \"offerStart\",\r\n      displayName: \"Start Date\",\r\n      placeholder: \"Select Start Date\",\r\n      minDate: new Date(),\r\n      type: \"date\",\r\n      value: formData.offerStart,\r\n      onChange: changeHandler,\r\n      required: true,\r\n      autoComplete: \"off\",\r\n    },\r\n    {\r\n      name: \"offerEnd\",\r\n      displayName: \"End Date\",\r\n      placeholder: \"Select End Date\",\r\n      minDate:\r\n        formData.offerStart !== \"\" &&\r\n        formData.offerStart !== null &&\r\n        formData.offerStart !== undefined\r\n          ? new Date(\r\n              formData.offerStart.getFullYear(),\r\n              formData.offerStart.getMonth(),\r\n              formData.offerStart.getDate() + 1\r\n            )\r\n          : null,\r\n      type: \"date\",\r\n      disabled: formData.offerStart === \"\",\r\n      value: formData.offerEnd,\r\n      onChange: changeHandler,\r\n      autoComplete: \"off\",\r\n      required: true,\r\n    },\r\n  ].filter((el) => el !== null);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(props.data.storeId);\r\n    setSubmitLoading(true);\r\n    let submitData = {\r\n      ...formData,\r\n      storeId: props.fromPartner ? props.data.storeId : null,\r\n      offerStart: formData.offerStart.getTime(),\r\n      offerEnd: formData.offerEnd.getTime(),\r\n    };\r\n    console.log(submitData);\r\n    axiosInstance\r\n      .post(\r\n        props.fromPartner ? \"/addpartneroffer\" : \"/addstoreoffer\",\r\n        submitData\r\n      )\r\n      .then((res) => {\r\n        setSubmitLoading(false);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setShow(true);\r\n          setMessage(\"Success\");\r\n          setType(\"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setSubmitLoading(false);\r\n        // console.log(err.response.status);\r\n        // setError(getStatus(err.response.status));\r\n        setShow(true);\r\n        setMessage(\"Error\");\r\n        setType(\"error\");\r\n      });\r\n  };\r\n\r\n  const valid = () => {\r\n    let requiredFeilds = [\r\n      ...Object.values(formData).map((el) => {\r\n        if (el === null || el === []) {\r\n          return \"\";\r\n        }\r\n        return el;\r\n      }),\r\n    ];\r\n    return requiredFeilds.every((el) => el.toString().trim() !== \"\");\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setShow(false);\r\n    if (type !== \"error\") {\r\n      setFormData({\r\n        offerStart: \"\",\r\n        offerEnd: \"\",\r\n        offerImage: null,\r\n        users: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <SAddOfferLoader fromPartner={props.fromPartner} />\r\n  ) : (\r\n    <Fragment>\r\n      {props.fromPartner ? (\r\n        <MyCard className=\"full-width flex-row partner-view_offer-title\">\r\n          <div className=\"back-button flex-center\" onClick={props.goBack}>\r\n            <i className=\"red fa fa-chevron-left\" aria-hidden=\"true\"></i>\r\n          </div>\r\n          <div className=\"each-partner-title flex-center\">\r\n            <h4 className=\"break-word\">{props.data.name}</h4>\r\n          </div>\r\n        </MyCard>\r\n      ) : null}\r\n      <br />\r\n      <Modal\r\n        className=\"blurred-box\"\r\n        show={showDropDown}\r\n        onClose={() => setShowDropDown(false)}\r\n      >\r\n        <MyCard className=\"store-dropdown-card bg-transparent\">\r\n          <div className=\"store-dropdown-selector bg-transparent\">\r\n            {options.length === 0 ? (\r\n              <div className=\"flex-center\">\r\n                <h4>No Users !</h4>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {options.map((el) => (\r\n                  <div\r\n                    key={el._id}\r\n                    className=\"d-flex justify-content-between flex-wrap each-store-option\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => storeChange(el)}\r\n                    id={el._id}\r\n                  >\r\n                    <div className=\"store-name-div vertical-flex-center\">\r\n                      {el.phone}\r\n                    </div>\r\n                    <div className=\"checkbox-div flex-center\">\r\n                      <CheckBox\r\n                        name={el.phone}\r\n                        id={el._id}\r\n                        checked={formData.users.some(\r\n                          (ele) => ele._id === el._id\r\n                        )}\r\n                        onChange={() => storeChange(el)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <AsyncButton type=\"button\" onClick={() => setShowDropDown(false)}>\r\n            Done\r\n          </AsyncButton>\r\n        </MyCard>\r\n      </Modal>\r\n\r\n      <div>\r\n        <MyCard title=\"ADD OFFER\">\r\n          <Alert\r\n            type={type}\r\n            message={message}\r\n            hideAlert={hideAlert}\r\n            show={show}\r\n          />\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            <ImageUpload\r\n              needPreview\r\n              sizeLimit=\"1\"\r\n              compress\r\n              className=\"my-image\"\r\n              image={formData.offerImage}\r\n              onChange={(imageurl, validity, error) => {\r\n                setInfo(error);\r\n                if (validity) {\r\n                  setInfo(\" \");\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    offerImage: imageurl,\r\n                  }));\r\n                } else {\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    offerImage: null,\r\n                  }));\r\n                }\r\n              }}\r\n            />\r\n            <FormInfo info={info} />\r\n            {schema.map((el, index) => (\r\n              <EachField key={index} {...el} />\r\n            ))}\r\n            {/* <FormInfo info={error} /> */}\r\n            <AsyncButton\r\n              loading={submitLoading}\r\n              disabled={!valid()}\r\n              className=\"bg-green lg\"\r\n              type=\"submit\"\r\n            >\r\n              ADD\r\n            </AsyncButton>\r\n          </form>\r\n        </MyCard>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddOffer);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport EachField from \"../../../../../UI/FormField/FormField\";\r\nimport MyCard from \"../../../../../UI/MyCard/MyCard\";\r\nimport { axiosInstance } from \"../../../../../Utility/axiosInstance\";\r\nimport \"./EachOffer.css\";\r\nimport Alert from \"../../../../../UI/Alert/Alert\";\r\nimport AsyncButton from \"../../../../../UI/AsyncButton/AsyncButton\";\r\nimport ImageUpload from \"../../../../../UI/ImageUpload/ImageUpload\";\r\nimport FormInfo from \"../../../../../UI/FormInfo/FormInfo\";\r\nimport Modal from \"../../../../../UI/Modal/Modal\";\r\nimport Spinner from \"../../../../../UI/Spinner/Spinner\";\r\nimport CheckBox from \"../../../../../UI/CheckBox/CheckBox\";\r\nimport SAddOfferLoader from \"../../AddOffer/SAddOfferLoader/SAddOfferLoader\";\r\n\r\nconst EachOffer = (props) => {\r\n  const [formData, setFormData] = useState({ ...props.data });\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [info, setInfo] = useState(\" \");\r\n  const [type, setType] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [showDropDown, setShowDropDown] = useState(false);\r\n\r\n  const getUsers = () => {\r\n    setModalLoading(true);\r\n    axiosInstance\r\n      .post(\r\n        \"/listusers\",\r\n        props.fromPartner\r\n          ? { storeId: props.data._id }\r\n          : { userId: props.data.userId }\r\n      )\r\n      .then((res) => {\r\n        setModalLoading(false);\r\n        setOptions([...res.data]);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setModalLoading(false);\r\n        setOptions([]);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     setSchema();\r\n  //   }, [formData]);\r\n\r\n  const storeChange = (element) => {\r\n    let included = formData.users.some((el) => el._id === element._id);\r\n    if (!included)\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        users: [...prev.users, element],\r\n      }));\r\n    else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        users: [...prev.users.filter((el) => el._id !== element._id)],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"startDate\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        offerEnd: \"\",\r\n      }));\r\n    } else\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n  };\r\n\r\n  // const selectChangeHandler = (value, name) => {\r\n  //   setFormData((prev) => ({\r\n  //     ...prev,\r\n  //     [name]: value,\r\n  //   }));\r\n  // };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setSubmitLoading(true);\r\n    let editedObject = {\r\n      ...formData,\r\n      offerStart: formData.offerStart.getTime(),\r\n      offerEnd: formData.offerEnd.getTime(),\r\n    };\r\n\r\n    let submitData = [\r\n      ...props.entireValue.map((el) => {\r\n        if (el._id === formData._id) {\r\n          return editedObject;\r\n        }\r\n        return el;\r\n      }),\r\n    ];\r\n    console.log(submitData);\r\n    axiosInstance\r\n      .post(\"/addstoreoffer\", submitData)\r\n      .then((res) => {\r\n        setSubmitLoading(false);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setShow(true);\r\n          setMessage(\"Success\");\r\n          setType(\"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setSubmitLoading(false);\r\n        // console.log(err.response.status);\r\n        // setError(getStatus(err.response.status));\r\n        setShow(true);\r\n        setMessage(\"Error\");\r\n        setType(\"error\");\r\n      });\r\n  };\r\n\r\n  const valid = () => {\r\n    let requiredFeilds = [\r\n      ...Object.values(formData).map((el) => {\r\n        if (el === null || el === []) {\r\n          return \"\";\r\n        }\r\n        return el;\r\n      }),\r\n    ];\r\n    return requiredFeilds.every((el) => el.toString().trim() !== \"\");\r\n  };\r\n\r\n  var schema = [\r\n    {\r\n      name: \"users\",\r\n      disabled: !props.edit,\r\n      style: { cursor: \"pointer\" },\r\n      displayName: \"Store\",\r\n      placeholder: \"Select Store\",\r\n      required: true,\r\n      value: formData.users.map((el) => el.phone + \", \"),\r\n      onChange: () => {},\r\n      onClick: () => {\r\n        setShowDropDown(true);\r\n        getUsers();\r\n      },\r\n    },\r\n    {\r\n      name: \"offerStart\",\r\n      disabled: !props.edit,\r\n      displayName: \"Start Date\",\r\n      placeholder: \"Select Start Date\",\r\n      minDate: new Date(),\r\n      type: \"date\",\r\n      value: formData.offerStart,\r\n      onChange: changeHandler,\r\n      required: true,\r\n      autoComplete: \"off\",\r\n    },\r\n    {\r\n      name: \"offerEnd\",\r\n      displayName: \"End Date\",\r\n      placeholder: \"Select End Date\",\r\n      minDate:\r\n        formData.offerStart !== \"\" &&\r\n        formData.offerStart !== null &&\r\n        formData.offerStart !== undefined\r\n          ? new Date(\r\n              formData.offerStart.getFullYear(),\r\n              formData.offerStart.getMonth(),\r\n              formData.offerStart.getDate() + 1\r\n            )\r\n          : null,\r\n      type: \"date\",\r\n      disabled: formData.offerStart === \"\" || !props.edit,\r\n      value: formData.offerEnd,\r\n      onChange: changeHandler,\r\n      autoComplete: \"off\",\r\n      required: true,\r\n    },\r\n  ];\r\n\r\n  const hideAlert = () => {\r\n    setShow(false);\r\n    if (type !== \"error\") {\r\n      props.afterSubmit();\r\n      //   setFormData({\r\n      //     offerStart: \"\",\r\n      //     offerEnd: \"\",\r\n      //     offerImage: null,\r\n      //     users: [],\r\n      //   });\r\n    }\r\n  };\r\n\r\n  console.log(formData);\r\n\r\n  return loading ? (\r\n    <SAddOfferLoader />\r\n  ) : (\r\n    <Fragment>\r\n      <Modal\r\n        className=\"blurred-box\"\r\n        show={showDropDown}\r\n        onClose={() => setShowDropDown(false)}\r\n      >\r\n        <MyCard className=\"store-dropdown-card bg-transparent\">\r\n          <div className=\"store-dropdown-selector\">\r\n            {modalLoading ? (\r\n              <div className=\"flex-center _100\">\r\n                <Spinner />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {options.map((el) => (\r\n                  <div\r\n                    key={el._id}\r\n                    className=\"d-flex justify-content-between flex-wrap each-store-option\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => storeChange(el)}\r\n                    id={el._id}\r\n                  >\r\n                    <div className=\"store-name-div vertical-flex-center\">\r\n                      {el.phone}\r\n                    </div>\r\n                    <div className=\"checkbox-div flex-center\">\r\n                      <CheckBox\r\n                        name={el.phone}\r\n                        id={el._id}\r\n                        checked={formData.users.some(\r\n                          (ele) => ele._id === el._id\r\n                        )}\r\n                        onChange={() => storeChange(el)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <AsyncButton type=\"button\" onClick={() => setShowDropDown(false)}>\r\n            Done\r\n          </AsyncButton>\r\n        </MyCard>\r\n      </Modal>\r\n\r\n      <div>\r\n        <MyCard title={props.data.storeName} style={{ marginTop: 20 }}>\r\n          <Alert\r\n            type={type}\r\n            message={message}\r\n            hideAlert={hideAlert}\r\n            show={show}\r\n          />\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            <ImageUpload\r\n              needPreview\r\n              sizeLimit=\"1\"\r\n              compress\r\n              className=\"my-image\"\r\n              editable={props.edit}\r\n              image={formData.offerImage}\r\n              onChange={(imageurl, validity, error) => {\r\n                setInfo(error);\r\n                if (validity) {\r\n                  setInfo(\" \");\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    offerImage: imageurl,\r\n                  }));\r\n                } else {\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    offerImage: null,\r\n                  }));\r\n                }\r\n              }}\r\n            />\r\n            <FormInfo info={info} />\r\n            {schema.map((el, index) => (\r\n              <EachField key={index} {...el} />\r\n            ))}\r\n            {/* <FormInfo info={error} /> */}\r\n            <div className=\"flex-row\">\r\n              {props.edit ? (\r\n                <AsyncButton\r\n                  loading={submitLoading}\r\n                  disabled={!valid()}\r\n                  className=\"bg-green lg edit-options\"\r\n                  type=\"submit\"\r\n                >\r\n                  Update\r\n                </AsyncButton>\r\n              ) : null}\r\n              <AsyncButton\r\n                type=\"button\"\r\n                onClick={() => props.onEdit(props.index)}\r\n                style={{ background: props.edit ? \"#ee3632\" : \"#4fb664\" }}\r\n                className=\"bg-green lg edit-options\"\r\n              >\r\n                {props.edit ? \"Cancel\" : \"Edit\"}\r\n              </AsyncButton>\r\n            </div>\r\n          </form>\r\n        </MyCard>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EachOffer;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport AsyncButton from \"../../../../UI/AsyncButton/AsyncButton\";\r\nimport MyCard from \"../../../../UI/MyCard/MyCard\";\r\nimport Spinner from \"../../../../UI/Spinner/Spinner\";\r\nimport { axiosInstance } from \"../../../../Utility/axiosInstance\";\r\nimport SAddOfferLoader from \"../AddOffer/SAddOfferLoader/SAddOfferLoader\";\r\nimport EachOffer from \"./EachOffer.js/EachOffer\";\r\nimport \"./ViewOffer.css\";\r\n\r\nconst ViewOffer = (props) => {\r\n  const [formData, setFormData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [edit, setEdit] = useState({ display: false, data: {}, index: \"\" });\r\n\r\n  const onEdit = (index) => {\r\n    setEdit({ display: true, data: formData[index], index: index });\r\n  };\r\n\r\n  const onEditCancel = () => {\r\n    setEdit({ display: false, data: {}, index: \"\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .post(\"/viewstoreoffer\", {\r\n        storeId: props.fromPartner ? props.data._id : null,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false);\r\n        setFormData([\r\n          ...res.data.map((el) => ({\r\n            ...el,\r\n            offerStart: new Date(el.offerStart),\r\n            offerEnd: new Date(el.offerEnd),\r\n          })),\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  console.log(props.data);\r\n\r\n  return loading ? (\r\n    <Fragment>\r\n      <SAddOfferLoader />\r\n      <br />\r\n      <SAddOfferLoader />\r\n      <br />\r\n      <SAddOfferLoader />\r\n      <br />\r\n    </Fragment>\r\n  ) : formData.length === 0 ? (\r\n    <MyCard className=\"flex-column\">\r\n      {props.fromPartner ? (\r\n        <div onClick={props.goBack}>\r\n          <i className=\"red fa fa-chevron-left pointer\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"flex-center flex-column\">\r\n        <br />\r\n        <h4>No Offers !</h4>\r\n        <br />\r\n        <AsyncButton onClick={() => props.history.replace(\"/addoffer\")}>\r\n          Add New Offer\r\n        </AsyncButton>\r\n      </div>\r\n    </MyCard>\r\n  ) : edit.display ? (\r\n    <EachOffer\r\n      fromPartner={props.fromPartner}\r\n      data={edit.data}\r\n      index={edit.index}\r\n      edit\r\n      entireValue={formData}\r\n      onEdit={onEditCancel}\r\n      afterSubmit={fetchData}\r\n    />\r\n  ) : (\r\n    <Fragment>\r\n      {props.fromPartner ? (\r\n        <MyCard className=\"full-width flex-row partner-view_offer-title\">\r\n          <div className=\"back-button flex-center\" onClick={props.goBack}>\r\n            <i className=\"red fa fa-chevron-left\" aria-hidden=\"true\"></i>\r\n          </div>\r\n          <div className=\"each-partner-title flex-center\">\r\n            <h4 className=\"break-word\">{props.data.name}</h4>\r\n          </div>\r\n        </MyCard>\r\n      ) : null}\r\n      {formData.map((el, index) => (\r\n        <EachOffer\r\n          fromPartner={props.fromPartner}\r\n          entireValue={formData}\r\n          onEdit={onEdit}\r\n          key={el._id}\r\n          index={index}\r\n          edit={false}\r\n          data={el}\r\n        />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ViewOffer);\r\n","import React, { Fragment } from \"react\";\r\nimport \"./RoundProgress.css\";\r\nimport {\r\n  CircularProgressbar,\r\n  CircularProgressbarWithChildren,\r\n} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst RoundProgress = (props) => {\r\n  const classNames = [\r\n    \"CircularProgressbar-path\",\r\n    \"CircularProgressbar-trail\",\r\n    \"CircularProgressbar-text\",\r\n    \"CircularProgressbar-background\",\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <style>\r\n        {`.CircularProgressbar-path {\r\n            stroke: ${props.barColor} !important;\r\n            }\r\n            .CircularProgressbar-trail {\r\n            stroke: ${props.pathColor} !important;\r\n            }\r\n            .CircularProgressbar-text {\r\n            fill: ${props.textColor} !important;\r\n            stroke: ${props.textColor} !important;\r\n            }\r\n            .CircularProgressbar-background {\r\n            fill: ${props.backgroundColor} !important;\r\n            stroke: ${props.backgroundColor} !important;\r\n            }`}\r\n      </style>\r\n      {props.children ? (\r\n        <CircularProgressbarWithChildren\r\n          className={classNames.join(\" \")}\r\n          value={props.percentage}\r\n        >\r\n          {props.children}\r\n        </CircularProgressbarWithChildren>\r\n      ) : (\r\n        <CircularProgressbar\r\n          className={classNames.join(\" \")}\r\n          value={props.percentage}\r\n          text={`${props.percentage}%`}\r\n        >\r\n          {props.children}\r\n        </CircularProgressbar>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RoundProgress;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyCard from \"../../../UI/MyCard/MyCard\";\r\nimport { adjustTextSize } from \"../../../Utility/responsiveTextSize\";\r\nimport { numberWithComma } from \"../../../Utility/numbersWithComma\";\r\nimport \"./home.css\";\r\nimport { Col } from \"reactstrap\";\r\nimport { axiosInstance } from \"../../../Utility/axiosInstance\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport RoundProgress from \"../../../UI/RoundProgress/RoundProgress\";\r\n\r\nconst Home = (props) => {\r\n  const [data, setData] = useState({\r\n    total: 0,\r\n    storesVisits: 0,\r\n    mostVisited: 0,\r\n    leastVisited: 0,\r\n    mostVisitedStore: \"\",\r\n    leastVisitedStore: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    adjustTextSize();\r\n  }, []);\r\n\r\n  // console.log(Date.now());\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"_100\">\r\n      <MyCard>\r\n        <div className=\"progressbar-container\">\r\n          <RoundProgress\r\n            // textColor=\"red\"\r\n            // barColor=\"green\"\r\n            // backgroundColor=\"yellow\"\r\n            // pathColor=\"yellow\"\r\n            percentage={90}\r\n          >\r\n            {/* <strong>90%</strong>\r\n            <small>increase</small> */}\r\n          </RoundProgress>\r\n        </div>\r\n      </MyCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { Col } from \"reactstrap\";\r\nimport Alert from \"../../../UI/Alert/Alert\";\r\nimport AsyncButton from \"../../../UI/AsyncButton/AsyncButton\";\r\nimport EachField from \"../../../UI/FormField/FormField\";\r\nimport FormInfo from \"../../../UI/FormInfo/FormInfo\";\r\nimport MyCard from \"../../../UI/MyCard/MyCard\";\r\nimport { axiosInstance } from \"../../../Utility/axiosInstance\";\r\nimport { compressImage } from \"../../../Utility/CompressImage\";\r\nimport { validateImage } from \"../../../Utility/validateImage\";\r\nimport { imageToPdf } from \"../../../Utility/base64ToPdf\";\r\nimport \"./Profile.css\";\r\nimport EachStoreLoader from \"../../Partner/ViewStore/EachStore/EachStoreLoader/EachStoreLoader\";\r\n\r\nconst Profile = (props) => {\r\n  const [details, setDetails] = useState({\r\n    name: \"\",\r\n    QRCode: null,\r\n    email: \"\",\r\n    address: \"\",\r\n    logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n  });\r\n\r\n  const [detailsCopy, setDetailsCopy] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    QRCode: null,\r\n    address: \"\",\r\n    logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n  });\r\n\r\n  const edit = useRef();\r\n  const qrDownloadRef = useRef();\r\n\r\n  const [editProfile, setEditProfile] = useState(false);\r\n  const [sending, setSending] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [type, setType] = useState(\"success\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [validity, setValidity] = useState(false);\r\n  const [touched, setTouched] = useState(false);\r\n  const [imageUploading, setImageUploading] = useState(false);\r\n  const [imageError, setImageError] = useState(\" \");\r\n  const [errorColor, setErrorColor] = useState(\"coral\");\r\n\r\n  const changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    setDetails((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  var schema = [\r\n    {\r\n      name: \"name\",\r\n      displayName: \"Name\",\r\n      placeholder: editProfile ? \"Enter Name\" : \"\",\r\n      type: \"text\",\r\n      value: details.name,\r\n      onChange: changeHandler,\r\n      required: true,\r\n      spellCheck: false,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      displayName: \"Email\",\r\n      placeholder: editProfile ? \"Enter Email\" : \"\",\r\n      type: \"email\",\r\n      value: details.email,\r\n      disabled: true,\r\n      onChange: changeHandler,\r\n      required: true,\r\n      spellCheck: false,\r\n    },\r\n    {\r\n      name: \"address\",\r\n      displayName: \"Address\",\r\n      placeholder: editProfile ? \"Enter Address\" : \"\",\r\n      type: \"textarea\",\r\n      value: details.address,\r\n      onChange: changeHandler,\r\n      spellCheck: false,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .post(\"/storeprofile\")\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n          setDetails((prev) => ({ ...prev, ...res.data }));\r\n          setDetailsCopy((prev) => ({ ...prev, ...res.data }));\r\n        } else {\r\n          setDetails((prev) => ({\r\n            ...prev,\r\n            name: \"\",\r\n            email: \"\",\r\n            QRCode: null,\r\n            address: \"\",\r\n            logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n          }));\r\n          setDetailsCopy((prev) => ({\r\n            ...prev,\r\n            name: \"\",\r\n            email: \"\",\r\n            QRCode: null,\r\n            address: \"\",\r\n            logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n          }));\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setDetails((prev) => ({\r\n          ...prev,\r\n          name: \"\",\r\n          QRCode: null,\r\n          email: \"\",\r\n          address: \"\",\r\n          logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n        }));\r\n        setDetailsCopy((prev) => ({\r\n          ...prev,\r\n          name: \"\",\r\n          QRCode: null,\r\n          email: \"\",\r\n          address: \"\",\r\n          logo: require(\"../../../../assets/images/Default-Profile.png\"),\r\n        }));\r\n      });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setSubmitLoading(true);\r\n    axiosInstance\r\n      .post(\"/updatestoreprofile\", details)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubmitLoading(false);\r\n        if (res.status === 200) {\r\n          setMessage(\"Profile updated !\");\r\n          setShow(true);\r\n          setType(\"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setSubmitLoading(false);\r\n        setMessage(\"Profile Not updated !\");\r\n        setShow(true);\r\n        setType(\"error\");\r\n      });\r\n  };\r\n\r\n  const valid = () => {\r\n    let requiredFeilds = [details.name, details.email];\r\n    return requiredFeilds.every((el) => el.trim() !== \"\");\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setShow(false);\r\n    setEditProfile(false);\r\n    setImageError(\" \");\r\n    setErrorColor(\"coral\");\r\n    if (type !== \"error\") getData();\r\n  };\r\n\r\n  const imageChangeHandler = async (e) => {\r\n    setTouched(true);\r\n    setImageError(\" \");\r\n    if (e.target.files[0] !== undefined) {\r\n      setImageUploading(true);\r\n      setValidity(validateImage(e.target.files[0].name));\r\n      if (!validateImage(e.target.files[0].name)) {\r\n        setImageError(\"Choose only .jpeg / .jpg / .png / .jfif / .webp\");\r\n        setValidity(false);\r\n        setDetails((prev) => ({\r\n          ...prev,\r\n        }));\r\n        return;\r\n      } else if (e.target.files[0].size > 2000 * 1000) {\r\n        setImageError(\"Size should be within 2MB\");\r\n        setValidity(false);\r\n        setDetails((prev) => ({\r\n          ...prev,\r\n        }));\r\n        return;\r\n      } else {\r\n        setSending(true);\r\n        setErrorColor(\"green\");\r\n        setImageError(\"Your image is being processed...\");\r\n\r\n        const callBack = (image) => {\r\n          let processedImage = image[0].prefix + image[0].data;\r\n          setDetails((prev) => ({ ...prev, logo: processedImage }));\r\n          setImageUploading(false);\r\n          updateProfile(processedImage);\r\n        };\r\n        await compressImage([e.target.files[0]], { size: 0.5 }, callBack);\r\n      }\r\n    } else {\r\n      setValidity(false);\r\n      setImageError(\"No file Choosen\");\r\n      setDetails((prev) => ({\r\n        ...prev,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const updateProfile = (image) => {\r\n    setImageError(\"Uploading...\");\r\n    axiosInstance\r\n      .post(\"/updatestoreprofile\", { ...detailsCopy, logo: image })\r\n      .then((res) => {\r\n        setImageError(\" \");\r\n        console.log(res.data);\r\n        setSending(false);\r\n        if (res.status === 200) {\r\n          setMessage(\"Profile updated !\");\r\n          setShow(true);\r\n          setType(\"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setDetails((prev) => ({\r\n          ...prev,\r\n          logo: detailsCopy.logo,\r\n        }));\r\n        setSending(false);\r\n        setImageError(\"Something went Wrong !\");\r\n        setMessage(\"Profile Not updated !\");\r\n        setShow(true);\r\n        setType(\"error\");\r\n      });\r\n  };\r\n\r\n  const imageEdit = () => {\r\n    edit.current.click();\r\n  };\r\n\r\n  const togglEdit = () => {\r\n    if (edit) {\r\n      setDetails((prev) => ({ ...detailsCopy, logo: prev.logo }));\r\n    }\r\n    setEditProfile((prev) => !prev);\r\n  };\r\n\r\n  const downlaodPdf = () => {\r\n    imageToPdf(details.QRCode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <EachStoreLoader />\r\n      ) : details.length === 0 ? (\r\n        <h4 className=\"margin-auto text-center\">\r\n          <br />\r\n          <br />\r\n          Something went Wrong !\r\n        </h4>\r\n      ) : (\r\n        <Fragment>\r\n          <MyCard className=\"flex-row wrap\">\r\n            <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"flex-column\">\r\n              <div className=\"profile\">\r\n                <input\r\n                  ref={edit}\r\n                  type=\"file\"\r\n                  style={{ position: \"absolute\", visibility: \"hidden\" }}\r\n                  onChange={imageChangeHandler}\r\n                />\r\n                {details.logo === null || (!validity && touched) ? (\r\n                  <div\r\n                    style={{\r\n                      backgroundImage:\r\n                        \"url(\" +\r\n                        require(\"../../../../assets/images/Default-Profile.png\") +\r\n                        \")\",\r\n                    }}\r\n                    alt=\" \"\r\n                    className={`profile-page-logo ${\r\n                      sending ? \"skeleton-loading\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div onClick={sending ? () => {} : () => imageEdit()}>\r\n                      <p>Edit</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      backgroundImage: \"url(\" + details.logo + \")\",\r\n                    }}\r\n                    alt=\" \"\r\n                    className={`profile-page-logo ${\r\n                      sending ? \"skeleton-loading\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div onClick={sending ? () => {} : () => imageEdit()}>\r\n                      <p>Edit</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <br />\r\n              </div>\r\n              <FormInfo\r\n                info={imageError}\r\n                color={errorColor}\r\n                className=\"left-at-desktop\"\r\n              />\r\n              <br />\r\n              <div>\r\n                <AsyncButton\r\n                  className={\"lg\" + (editProfile ? \" bg-red\" : \" bg-green\")}\r\n                  type=\"button\"\r\n                  onClick={togglEdit}\r\n                >\r\n                  {editProfile ? \"Cancel\" : \"Edit\"}\r\n                </AsyncButton>\r\n                <br />\r\n                <Alert\r\n                  type={type}\r\n                  message={message}\r\n                  hideAlert={hideAlert}\r\n                  show={show}\r\n                />\r\n                {editProfile ? (\r\n                  <form className=\"form\" onSubmit={submitHandler}>\r\n                    {schema.map((el, index) => (\r\n                      <EachField key={index} {...el} />\r\n                    ))}\r\n                    <AsyncButton\r\n                      loading={submitLoading}\r\n                      disabled={!valid()}\r\n                      className=\"bg-green lg\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Update\r\n                    </AsyncButton>\r\n                  </form>\r\n                ) : (\r\n                  <div className=\"form\">\r\n                    {schema.map((el, index) => (\r\n                      <EachField key={index} {...el} disabled={true} />\r\n                    ))}\r\n                    <div style={{ visibility: \"hidden\" }}>\r\n                      <AsyncButton\r\n                        loading={submitLoading}\r\n                        disabled={!valid()}\r\n                        className=\"bg-green lg\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Update\r\n                      </AsyncButton>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"flex-center\">\r\n              <div className=\"qr-code\">\r\n                {details.QRCode === null || details.QRCode === undefined ? (\r\n                  <div>\r\n                    <div className=\"bg-grey qr-code\"></div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex-column flex-center\">\r\n                    <img\r\n                      src={details.QRCode}\r\n                      alt=\" \"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                    <div>\r\n                      <br />\r\n                      <button\r\n                        onClick={downlaodPdf}\r\n                        className=\"bg-green sm margin-auto\"\r\n                        type=\"button\"\r\n                      >\r\n                        Download\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </MyCard>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { jsPDF } from \"jspdf\";\r\nexport function imageToPdf(imgData) {\r\n  var doc = new jsPDF();\r\n\r\n  doc.addImage(imgData, \"JPEG\", 15, 40, 180, 160);\r\n  doc.output(\"datauri\");\r\n  doc.save(\"qr-code.pdf\");\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport PageShell from \"../../UI/PageShell/PageShell\";\r\nimport Sidebar from \"../../UI/Sidebar/Sidebar\";\r\nimport Home from \"./home/home\";\r\nimport AddOffer from \"./Offers/AddOffer/AddOffer\";\r\nimport ViewOffer from \"./Offers/ViewOffer/ViewOffer\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport \"./Store.css\";\r\n\r\nconst Store = (props) => {\r\n  var storeSidebar = [\r\n    { name: \"Dashboard\", to: \"/home\" },\r\n    {\r\n      dropdown: {\r\n        heading: \"OFFERS\",\r\n        options: [\r\n          { name: \"ADD OFFER\", to: \"/addoffer\" },\r\n          { name: \"VEIW OFFER\", to: \"/viewoffer\" },\r\n        ],\r\n      },\r\n    },\r\n    { name: \"LOGOUT\", to: \"/logout\" },\r\n    {\r\n      component: (\r\n        <div\r\n          className=\"nav-logo\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" +\r\n              (props.logo !== null\r\n                ? props.logo\r\n                : require(\"../../../assets/images/Default-Profile.png\")) +\r\n              \")\",\r\n          }}\r\n        ></div>\r\n      ),\r\n      to: \"/profile\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Sidebar\r\n        style={{ background: \"transparent\" }}\r\n        routes={storeSidebar}\r\n        heading={\r\n          <img\r\n            src={require(\"../../../assets/images/EZWalkin-Logo.jpg\")}\r\n            alt=\"logo\"\r\n            // className=\"logo\"\r\n          />\r\n        }\r\n      />\r\n      <br />\r\n      <Switch>\r\n        <Route path=\"/home\" component={PageShell(Home)} />\r\n        <Route path=\"/addoffer\" component={PageShell(AddOffer)} />\r\n        <Route path=\"/viewoffer\" component={PageShell(ViewOffer)} />\r\n        <Route path=\"/profile\" component={PageShell(Profile)} />\r\n        <Redirect to={props.auth ? \"/profile\" : \"/auth\"} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.login.token !== null,\r\n    logo: state.login.logo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Store);\r\n"],"sourceRoot":""}
{"version":3,"sources":["Components/UI/Alert/Gifs/success2.gif","assets/images/EZWalkin-Logo.jpg","Components/UI/AsyncButton/AsyncButton.js","Components/Store/actions/actionTypes.js","Components/Utility/axiosInstance.js","Components/Pages/Auth/VerificationPage/VerificationPage.js","Components/Pages/Auth/Logout/Logout.js","Components/UI/AppSpinner/AppSpinner.js","App.js","serviceWorker.js","Components/Store/reducers/loginReducer.js","index.js","Components/UI/Spinner/Spinner.js","Components/Utility/cookies.js","Components/UI/Alert/Alert.js","Components/Store/actions/Login.js","Components/UI/MyCard/MyCard.js","Components/UI/Date/Date.js","Components/UI/Select/Select.js","Components/UI/FormField/FormField.js","Components/Utility/filterNumbers.js","Components/Store/actions/index.js","Components/Utility/processImage.js","Components/UI/Alert/Gifs/error.gif","Components/Utility/base64ToPdf.js","Components/UI/PageShell/PageShell.js","Components/UI/SmallSpinner/SmallSpinner.js","Components/Utility/CompressImage.js"],"names":["module","exports","AsyncButton","props","style","disabled","className","loading","type","onClick","children","START_LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","SET_TEMPORARY_TOKEN","SET_VERIFIED","axiosInstance","axios","create","baseURL","headers","Authorization","getCookie","connect","dispatch","setVerified","status","storeToken","token","email","setTemporaryToken","useState","setLoading","setStatus","setType","message","setMessage","show","setShow","text","setText","useEffect","tokenArray","window","location","href","split","length","post","then","res","console","log","data","deleteCookie","catch","err","setTimeout","response","Spinner","Alert","hideAlert","history","replace","confirmButtonText","push","logout","loginFailure","localStorage","removeItem","background","AppSpinner","alt","src","require","LazyStore","lazy","LazyAuth","state","auth","login","undefined","verified","userType","checkAuthStatus","withRouter","pathname","route","setRoute","a","defaults","common","setAxiosHeader","includes","setItem","routes","path","render","fallback","component","VerificationPage","PageShell","Logout","to","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialState","temporaryToken","logo","loginReducer","actions","actionTypes","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","name","matches","cookie","RegExp","decodeURIComponent","setCookie","value","options","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","backgroundImage","Success","Error","loginSuccess","MyCard","classNames","join","title","titleStyle","textAlign","titleCenter","DateInput","startDate","setStartDate","placeholderText","placeholder","dateFormat","selected","onChange","date","target","SelectInput","classNamePrefix","ref","label","styles","control","map","el","EachField","id","uniqueid","FormGroup","displayName","Label","for","addon","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","event","required","readOnly","Select","getFormField","filterNumbers","string","toString","parseInt","processImage","file","callback","fd","FileReader","readAsDataURL","onload","e","result","imageToPdf","imgData","doc","jsPDF","addImage","output","save","Page","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","SmallSpinner"],"mappings":"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","file":"static/js/main.d33c0950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/success2.8d2d721d.gif\";","module.exports = __webpack_public_path__ + \"static/media/EZWalkin-Logo.fa662033.jpg\";","import React, { Fragment } from \"react\";\r\nimport SmallSpinner from \"../SmallSpinner/SmallSpinner\";\r\n\r\nconst AsyncButton = (props) => {\r\n  return (\r\n    <button\r\n      style={{ ...props.style }}\r\n      disabled={props.disabled}\r\n      className={\r\n        props.loading\r\n          ? \"loading-style \" +\r\n            (props.className ? props.className : \"bg-green lg\")\r\n          : props.className\r\n          ? props.className\r\n          : \"bg-green lg\"\r\n      }\r\n      type={props.type ? props.type : \"button\"}\r\n      onClick={props.loading ? () => {} : props.onClick}\r\n    >\r\n      {props.loading ? (\r\n        <Fragment>\r\n          <SmallSpinner />\r\n        </Fragment>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AsyncButton;\r\n","export const START_LOGIN = \"START_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const SET_TEMPORARY_TOKEN = \"SET_TEMPORARY_TOKEN\";\r\nexport const SET_VERIFIED = \"SET_VERIFIED\";\r\n","import axios from \"axios\";\r\nimport { getCookie } from \"./cookies\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  // baseURL: \"https://cors-anywhere.herokuapp.com/https://ezwalkin.herokuapp.com\",\r\n  baseURL: \"https://course-reservation.herokuapp.com/api/\",\r\n  // baseURL: \"https://cors-anywhere.herokuapp.com/http://65.0.203.228:5000/\",\r\n  // baseURL: \"http://localhost:5000\",\r\n  headers: {\r\n    Authorization: `Bearer ${getCookie(\"token\")}`,\r\n  },\r\n});\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./VerificationPage.css\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\n// import { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { setVerified, setTemporaryToken } from \"../../../Store/actions\";\r\nimport AsyncButton from \"../../../UI/AsyncButton/AsyncButton\";\r\nimport { deleteCookie } from \"../../../Utility/cookies\";\r\nimport { axiosInstance } from \"../../../Utility/axiosInstance\";\r\nimport Alert from \"../../../UI/Alert/Alert\";\r\n\r\nconst VerificationPage = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const [type, setType] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let tokenArray = window.location.href.split(\"/\");\r\n    let token = tokenArray[tokenArray.length - 1];\r\n    axiosInstance\r\n      .post(\"/verifytoken\", { token: token })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        console.log(res.data);\r\n        if (res.status === 200) {\r\n          props.setVerified(true);\r\n          props.storeToken(token, res.data);\r\n          deleteCookie(\"token\");\r\n          setType(\"success\");\r\n          setMessage(\"Verified\");\r\n          setText(\"Continue\");\r\n          setShow(true);\r\n          setStatus(res.status);\r\n          // setTimeout(() => {\r\n          // }, 2000);\r\n        } else setStatus(res.status);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        deleteCookie(\"token\");\r\n        setType(\"error\");\r\n        setMessage(\"Failed\");\r\n        setShow(true);\r\n        setText(\"OK\");\r\n        setTimeout(() => {\r\n          setStatus(err.response.status);\r\n        }, 2000);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const hideAlert = () => {\r\n    setShow(false);\r\n    if (status === 200) {\r\n      setTimeout(() => {\r\n        props.history.replace(\"/auth/signup\");\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-page-wrapper flex-center flex-column\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : show ? (\r\n        <Alert\r\n          type={type}\r\n          message={message}\r\n          hideAlert={hideAlert}\r\n          show={show}\r\n          confirmButtonText={text}\r\n        />\r\n      ) : status === 200 ? (\r\n        <Fragment>\r\n          <Spinner />\r\n          <h4>Redirecting...</h4>\r\n        </Fragment>\r\n      ) : status === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"flex-column flex-center\">\r\n          <h4>Something went wrong !</h4>\r\n          <AsyncButton onClick={() => props.history.push(\"/auth/signin\")}>\r\n            Login\r\n          </AsyncButton>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setVerified: (status) => dispatch(setVerified(status)),\r\n    storeToken: (token, email) => dispatch(setTemporaryToken(token, email)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(VerificationPage);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Redirect } from \"react-router\";\r\nimport { loginFailure } from \"../../../Store/actions/Login\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport { axiosInstance } from \"../../../Utility/axiosInstance\";\r\nimport { deleteCookie } from \"../../../Utility/cookies\";\r\n\r\nconst Logout = (props) => {\r\n  localStorage.removeItem(\"route\");\r\n  useEffect(() => {\r\n    deleteCookie(\"token\");\r\n    props.logout();\r\n    axiosInstance.post(\"/logout\");\r\n    setTimeout(() => {\r\n      props.history.push(\"/auth/signin\");\r\n      // window.location.reload();\r\n    }, 2000);\r\n  }, []);\r\n  // useEffect(() => {\r\n  // }, []);\r\n  return (\r\n    <div\r\n      className=\"full-page-wrapper flex-center flex-column\"\r\n      style={{ background: \"white\" }}\r\n    >\r\n      <Spinner />\r\n      <h4>Logging out...</h4>\r\n    </div>\r\n  );\r\n\r\n  // <Redirect to=\"/auth/signin\" />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(loginFailure()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport \"./AppSpinner.css\";\r\n\r\nconst AppSpinner = (props) => {\r\n  return (\r\n    <div className=\"app-spinner full-page-wrapper\">\r\n      <img\r\n        className=\"app-spinner-logo\"\r\n        alt=\"loading...\"\r\n        src={require(\"../../../assets/images/EZWalkin-Logo.jpg\")}\r\n      />\r\n      <div className=\"progress-bar-container\">\r\n        <div className=\"progress-loader\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSpinner;\r\n","import React, { Fragment, lazy, Suspense, useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport VerificationPage from \"./Components/Pages/Auth/VerificationPage/VerificationPage\";\r\n// import { checkAuthStatus } from \"./Components/Store/actions\";\r\nimport Logout from \"./Components/Pages/Auth/Logout/Logout\";\r\nimport PageShell from \"./Components/UI/PageShell/PageShell\";\r\nimport { axiosInstance } from \"./Components/Utility/axiosInstance\";\r\nimport AppSpinner from \"./Components/UI/AppSpinner/AppSpinner\";\r\nimport HomePage from \"./Components/Pages/HomePage/HomePage\";\r\n\r\nconst LazySuperadmin = lazy(() =>\r\n  import(\"./Components/Pages/Superadmin/Superadmin\")\r\n);\r\nconst LazyPartner = lazy(() => import(\"./Components/Pages/Partner/Partner\"));\r\nconst LazyStore = lazy(() => import(\"./Components/Pages/Store/Store\"));\r\nconst LazyAuth = lazy(() => import(\"./Components/Pages/Auth/Auth\"));\r\n\r\nfunction App(props) {\r\n  const [route, setRoute] = useState(\r\n    props.location.pathname !== undefined && props.location.pathname !== null\r\n      ? props.location.pathname\r\n      : \"/\"\r\n  );\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  // useEffect(async () => {\r\n  //   // if (!window.location.href.includes(\"verifytoken\"))\r\n  //   //   await props.checkAuthStatus();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShow(true);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setAxiosHeader = async () => {\r\n      axiosInstance.defaults.headers.common[\r\n        \"Authorization\"\r\n      ] = await `Bearer ${props.token}`;\r\n    };\r\n    setAxiosHeader();\r\n  }, [props.token]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !window.location.href.includes(\"/auth\") &&\r\n      !window.location.href.includes(\"/home\") &&\r\n      !window.location.href.includes(\"/verify\")\r\n    ) {\r\n      localStorage.setItem(\"route\", props.location.pathname);\r\n      setRoute(\r\n        props.location.pathname !== undefined && props.location.href !== null\r\n          ? props.location.pathname\r\n          : \"/\"\r\n      );\r\n    }\r\n  }, [window.location.href]);\r\n\r\n  let routes = (\r\n    // <Route path=\"/\" render={(props) => <LazySuperadmin {...props} />} />\r\n    // {/* <Route path=\"/\" render={(props) => <LazyPartner {...props} />} /> */}\r\n    <Route path=\"/\" render={(props) => <LazyStore {...props} />} />\r\n  );\r\n\r\n  // if (props.userType === \"partner\") {\r\n  //   routes = <Route path=\"/\" render={(props) => <LazyPartner {...props} />} />;\r\n  // } else if (props.userType === \"store\") {\r\n  //   routes = <Route path=\"/\" render={(props) => <LazyStore {...props} />} />;\r\n  // }\r\n\r\n  return show ? (\r\n    props.loading ? (\r\n      <div className=\"full-page-wrapper flex-center bg-milky\">\r\n        <AppSpinner />\r\n      </div>\r\n    ) : (\r\n      <div className=\"App\">\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"full-page-wrapper flex-center bg-milky\">\r\n              <AppSpinner />\r\n            </div>\r\n          }\r\n        >\r\n          <Switch>\r\n            <Route path=\"/verifytoken/:token\" component={VerificationPage} />\r\n            <Route path=\"/logout\" component={PageShell(Logout)} />\r\n            {/* <Route path=\"/home\" component={PageShell(HomePage)} /> */}\r\n            {props.auth ? (\r\n              <Fragment>\r\n                {routes}\r\n                <Redirect to={route} />\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <Route path=\"/auth\" component={LazyAuth} />\r\n                <Redirect to=\"/auth\" />\r\n              </Fragment>\r\n            )}\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <AppSpinner />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // auth: true,\r\n    auth: state.login.token !== null && state.login.token !== undefined,\r\n    verified: state.login.verified,\r\n    loading: state.login.loading,\r\n    userType: state.login.userType,\r\n    token: state.login.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    checkAuthStatus: () => dispatch(() => {}),\r\n    // checkAuthStatus: () => dispatch(checkAuthStatus()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userType: null,\r\n  verified: false,\r\n  temporaryToken: null,\r\n  email: null,\r\n  loading: false,\r\n  logo: null,\r\n  data: {},\r\n};\r\n\r\nconst loginReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: \"bla\",\r\n        data: actions.data,\r\n      };\r\n    case actionTypes.SET_VERIFIED:\r\n      return {\r\n        ...state,\r\n        verified: actions.status,\r\n      };\r\n    case actionTypes.SET_TEMPORARY_TOKEN:\r\n      return {\r\n        ...state,\r\n        temporaryToken: actions.token,\r\n        email: actions.email,\r\n      };\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        userType: null,\r\n        token: null,\r\n        loading: false,\r\n        temporaryToken: null,\r\n        email: null,\r\n      };\r\n    case actionTypes.START_LOGIN:\r\n      return {\r\n        ...state,\r\n        userType: null,\r\n        token: null,\r\n        loading: true,\r\n        temporaryToken: null,\r\n        email: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default loginReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport loginReducer from \"./Components/Store/reducers/loginReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n//   () => {\r\n//   window.OneSignal = window.OneSignal || [];\r\n//   OneSignal.push(function () {\r\n//     OneSignal.init({\r\n//       appId: \"09352329-344d-4e28-9a74-1037b187730b\",\r\n//       notifyButton: {\r\n//         enable: true,\r\n//       },\r\n//       allowLocalhostAsSecureOrigin: true,\r\n//     });\r\n//   });\r\n// };\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className=\"sk-cube-grid\">\r\n      <div className=\"sk-cube sk-cube1\"></div>\r\n      <div className=\"sk-cube sk-cube2\"></div>\r\n      <div className=\"sk-cube sk-cube3\"></div>\r\n      <div className=\"sk-cube sk-cube4\"></div>\r\n      <div className=\"sk-cube sk-cube5\"></div>\r\n      <div className=\"sk-cube sk-cube6\"></div>\r\n      <div className=\"sk-cube sk-cube7\"></div>\r\n      <div className=\"sk-cube sk-cube8\"></div>\r\n      <div className=\"sk-cube sk-cube9\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","export function getCookie(name) {\r\n  let matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n        \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name, value, options = {}) {\r\n  options = {\r\n    path: \"/\",\r\n    // add other defaults here if necessary\r\n    ...options,\r\n  };\r\n\r\n  if (options.expires instanceof Date) {\r\n    options.expires = options.expires.toUTCString();\r\n  }\r\n\r\n  let updatedCookie =\r\n    encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n  for (let optionKey in options) {\r\n    updatedCookie += \"; \" + optionKey;\r\n    let optionValue = options[optionKey];\r\n    if (optionValue !== true) {\r\n      updatedCookie += \"=\" + optionValue;\r\n    }\r\n  }\r\n\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\n// setCookie('user', 'John', {secure: true, 'max-age': 3600});\r\n\r\nexport function deleteCookie(name) {\r\n  setCookie(name, \"\", {\r\n    \"max-age\": -1,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport \"./Alert.css\";\r\nimport Success from \"./Gifs/success2.gif\";\r\nimport Error from \"./Gifs/error.gif\";\r\n\r\nconst Alert = (props) => {\r\n  return props.show ? (\r\n    <div className=\"alert-container\" onClick={() => props.hideAlert()}>\r\n      <div\r\n        className={\r\n          \"alert-mini-container \" +\r\n          (props.type === \"success\"\r\n            ? \"success-bg\"\r\n            : props.type === \"error\"\r\n            ? \"error-bg\"\r\n            : \"white-bg\")\r\n        }\r\n      >\r\n        <h4 className=\"alert-message\">{props.message}</h4>\r\n        <div\r\n          className=\"alert\"\r\n          style={{\r\n            backgroundImage:\r\n              `url('` +\r\n              (props.type === \"success\"\r\n                ? Success\r\n                : props.type === \"error\"\r\n                ? Error\r\n                : Error) +\r\n              `')`,\r\n          }}\r\n        ></div>\r\n        <button onClick={() => props.hideAlert()} className=\"alert-button\">\r\n          {props.confirmButtonText ? props.confirmButtonText : \"OK\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Alert;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport { getCookie, setCookie } from \"../../Utility/cookies\";\r\nimport { axiosInstance } from \"../../Utility/axiosInstance\";\r\n\r\nexport const loginSuccess = (token, data) => {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    token: token,\r\n    data,\r\n  };\r\n};\r\nexport const loginFailure = () => {\r\n  return {\r\n    type: actionTypes.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const setTemporaryToken = (token, email) => {\r\n  return {\r\n    type: actionTypes.SET_TEMPORARY_TOKEN,\r\n    token: token,\r\n    email: email,\r\n  };\r\n};\r\n\r\nexport const setVerified = (status) => {\r\n  return {\r\n    type: actionTypes.SET_VERIFIED,\r\n    status: status,\r\n  };\r\n};\r\n\r\nexport const start = () => {\r\n  return {\r\n    type: actionTypes.START_LOGIN,\r\n  };\r\n};\r\n\r\n// export const checkAuthStatus = () => {\r\n//   var token = getCookie(\"token\");\r\n//   var email = getCookie(\"email\");\r\n//   var password = getCookie(\"password\");\r\n//   return (dispatch) => {\r\n//     if (\r\n//       token === null ||\r\n//       token === \"null\" ||\r\n//       token === \"\" ||\r\n//       token === undefined\r\n//     ) {\r\n//       return dispatch(loginFailure());\r\n//     }\r\n//     dispatch(start());\r\n//     axiosInstance\r\n//       .post(\"/login\", { email, password })\r\n//       .then((res) => {\r\n//         console.log(res.data);\r\n//         if (res.status === 200) {\r\n//           dispatch(loginSuccess(res.data.token, res.data.type, res.data.logo));\r\n//           setCookie(\"token\", res.data.token, {\r\n//             expires: new Date(3030, 0, 1).toUTCString(),\r\n//           });\r\n//           console.log(new Date(3030, 0, 1).toUTCString());\r\n//         } else {\r\n//           dispatch(loginFailure());\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//         dispatch(loginFailure());\r\n//       });\r\n//   };\r\n// };\r\n\r\n// dispatch(loginSuccess(res.data.token, res.data.type, res.data.logo));\r\n","import React, { Fragment } from \"react\";\r\nimport { CardTitle } from \"reactstrap\";\r\nimport \"./MyCard.css\";\r\n\r\nconst MyCard = (props) => {\r\n  let classNames = [\"my-card\", props.className ? props.className : \"\"];\r\n  return (\r\n    <div className={classNames.join(\" \")} style={props.style}>\r\n      {props.title ? (\r\n        <Fragment>\r\n          <CardTitle>\r\n            <h4\r\n              className=\"card-title-responsive\"\r\n              style={{\r\n                ...props.titleStyle,\r\n                textAlign: props.titleCenter ? \"center\" : \"left\",\r\n              }}\r\n            >\r\n              {props.title}\r\n            </h4>\r\n          </CardTitle>\r\n        </Fragment>\r\n      ) : null}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./Date.css\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nconst DateInput = (props) => {\r\n  const [startDate, setStartDate] = useState(props.value);\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <DatePicker\r\n        {...props}\r\n        placeholderText={props.placeholder}\r\n        className=\"date\"\r\n        dateFormat=\"dd-MM-yyyy\"\r\n        selected={startDate}\r\n        onChange={(date) => {\r\n          setStartDate(date);\r\n          props.onChange({\r\n            target: {\r\n              value: date,\r\n              name: props.name,\r\n            },\r\n          });\r\n        }}\r\n        // calendarClassName=\"rasta-stripes\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst SelectInput = (props) => {\r\n  return (\r\n    <Select\r\n      className=\"react-select\"\r\n      classNamePrefix=\"react-select\"\r\n      placeholder={props.placeholder}\r\n      ref={props.ref}\r\n      value={\r\n        props.value !== undefined && props.value !== null\r\n          ? props.value.length === 0\r\n            ? null\r\n            : { value: props.value, label: props.value }\r\n          : null\r\n      }\r\n      onChange={(value) =>\r\n        props.onChange(\r\n          value !== null && value !== undefined ? value.label : null,\r\n          props.name\r\n        )\r\n      }\r\n      name={props.name}\r\n      styles={{\r\n        control: (styles) => ({\r\n          background: \"rgba(230, 230, 230, 0.823)\",\r\n          ...styles,\r\n          ...props.style,\r\n        }),\r\n      }}\r\n      options={\r\n        props.options === null\r\n          ? []\r\n          : [...props.options.map((el) => ({ value: el, label: el }))]\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport uniqueid from \"uniqid\";\r\nimport DateInput from \"../Date/Date\";\r\n\r\nimport Select from \"../Select/Select\";\r\n\r\nconst EachField = (props) => {\r\n  let id = uniqueid();\r\n  const getFormField = () => {\r\n    switch (props.type) {\r\n      case \"text\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"textarea\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Select\r\n                  style={{ background: \"#fafafa\" }}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(value, name) => {\r\n                    props.onChange(value, name);\r\n                  }}\r\n                  options={props.options}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Select\r\n                style={{ background: \"#fafafa\" }}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(value, name) => {\r\n                  props.onChange(value, name);\r\n                }}\r\n                options={props.options}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n\r\n      case \"date\":\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <DateInput\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  name={props.name}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <DateInput\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      default:\r\n        return (\r\n          <FormGroup style={{ textAlign: \"left\" }}>\r\n            {props.displayName ? (\r\n              <Label for={id}>{props.displayName}</Label>\r\n            ) : null}\r\n            {props.addon ? (\r\n              <InputGroup>\r\n                <InputGroupAddon addonType={props.addon.type}>\r\n                  <InputGroupText>{props.addon.text}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  disabled={props.disabled}\r\n                  type={props.type}\r\n                  id={id}\r\n                  name={props.name}\r\n                  value={props.value}\r\n                  onChange={(event) => {\r\n                    props.onChange(event);\r\n                  }}\r\n                  placeholder={props.placeholder}\r\n                  required={props.required}\r\n                  readOnly={props.readOnly}\r\n                  {...props}\r\n                />\r\n              </InputGroup>\r\n            ) : (\r\n              <Input\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                id={id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={(event) => {\r\n                  props.onChange(event);\r\n                }}\r\n                placeholder={props.placeholder}\r\n                required={props.required}\r\n                readOnly={props.readOnly}\r\n                {...props}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        );\r\n    }\r\n  };\r\n  return getFormField();\r\n};\r\n\r\nexport default EachField;\r\n\r\n// const changeHandler = (event) => {\r\n//   const { name, value } = event.target;\r\n//   setFormData((prev) => ({\r\n//     ...prev,\r\n//     [name]: value,\r\n//   }));\r\n// };\r\n\r\n// const selectChangeHandler = (value, name) => {\r\n//   setFormData((prev) => ({\r\n//     ...prev,\r\n//     [name]: value,\r\n//   }));\r\n// };\r\n\r\n// var schema = [\r\n//   {\r\n//     name: \"name\",\r\n//     displayName: \"Name\",\r\n//     placeholder: \"Enter Name\",\r\n//     type: \"text\",\r\n//     value: formData.name,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"address\",\r\n//     displayName: \"Address\",\r\n//     placeholder: \"Enter Address\",\r\n//     type: \"textarea\",\r\n//     value: formData.address,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"country\",\r\n//     displayName: \"Country\",\r\n//     placeholder: \"Enter Country\",\r\n//     type: \"select\",\r\n//     value: formData.country,\r\n//     onChange: selectChangeHandler,\r\n//     options: [\"India\", \"Japan\"],\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"email\",\r\n//     displayName: \"Email\",\r\n//     placeholder: \"Enter Email\",\r\n//     type: \"email\",\r\n//     value: formData.email,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"contactPerson\",\r\n//     displayName: \"Contact Person\",\r\n//     placeholder: \"Enter Contact Person\",\r\n//     type: \"text\",\r\n//     value: formData.contactPerson,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"contactNumber\",\r\n//     displayName: \"Contact Number\",\r\n//     placeholder: \"Enter Contact Number\",\r\n//     type: \"number\",\r\n//     value: formData.contactNumber,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"latitude\",\r\n//     type: \"number\",\r\n//     displayName: \"Latitude\",\r\n//     placeholder: \"Enter Latitude\",\r\n//     value: formData.latitude,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n//   {\r\n//     name: \"longitude\",\r\n//     type: \"number\",\r\n//     displayName: \"Longitude\",\r\n//     placeholder: \"Enter Longitude\",\r\n//     value: formData.longitude,\r\n//     onChange: changeHandler,\r\n//     required: true,\r\n//   },\r\n// ];\r\n","export function filterNumbers(string) {\r\n  if (string !== null && string !== undefined) {\r\n    return string.toString().replace(/\\D/g, \"\") !== \"\"\r\n      ? parseInt(string.toString().replace(/\\D/g, \"\"))\r\n      : \"\";\r\n  }\r\n  return \"\";\r\n}\r\n","export { loginSuccess, setVerified, setTemporaryToken } from // checkAuthStatus,\r\n\"./Login\";\r\n","export const processImage = (file, callback) => {\r\n  if (file) {\r\n    let fd = new FileReader();\r\n    fd.readAsDataURL(file);\r\n    fd.onload = (e) => {\r\n      callback(e.target.result);\r\n      console.log(e.target.result);\r\n    };\r\n  } else {\r\n    callback(null);\r\n  }\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/error.23edc42b.gif\";","import { jsPDF } from \"jspdf\";\r\nexport function imageToPdf(imgData) {\r\n  var doc = new jsPDF();\r\n\r\n  doc.addImage(imgData, \"JPEG\", 15, 40, 180, 160);\r\n  doc.output(\"datauri\");\r\n  doc.save(\"qr-code.pdf\");\r\n}\r\n","import React from \"react\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport \"./PageShell.css\";\r\nconst PageShell = (Page) => {\r\n  return (props) => (\r\n    <div className=\"page\">\r\n      <ReactCSSTransitionGroup\r\n        transitionAppear={true}\r\n        transitionAppearTimeout={600}\r\n        transitionEnterTimeout={600}\r\n        transitionLeaveTimeout={200}\r\n        transitionName={\"SlideIn\"}\r\n      >\r\n        <Page {...props} />\r\n      </ReactCSSTransitionGroup>\r\n    </div>\r\n  );\r\n};\r\nexport default PageShell;\r\n","import React from \"react\";\r\nimport \"./SmallSpinner.css\";\r\n\r\nconst SmallSpinner = (props) => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default SmallSpinner;\r\n","const Compress = require(\"compress.js\");\r\nconst compress = new Compress();\r\n\r\n// export const compressImage = async (files, options, callBack) => {\r\n//   compress\r\n//     .compress(files, {\r\n//       size: options.size ? options.size : 2, // the max size in MB, defaults to 2MB\r\n//       quality: options.quality ? options.quality : 0.75, // the quality of the image, max is 1,\r\n//       maxWidth: 1920, // the max width of the output image, defaults to 1920px\r\n//       maxHeight: 1920, // the max height of the output image, defaults to 1920px\r\n//       resize: options.resize !== undefined ? options.resize : false, // defaults to true, set false if you do not want to resize the image width and height\r\n//     })\r\n//     .then((data) => {\r\n//       // console.log(data[0].prefix + data[0].data);\r\n//       callBack([...data]);\r\n//       //   return [...data];\r\n//     });\r\n// };\r\n\r\nexport const compressImage = async (files, options = {}, callBack) => {\r\n  compress\r\n    .compress(files, {\r\n      size: options.size ? options.size : 2, // the max size in MB, defaults to 2MB\r\n      quality: options.quality ? options.quality : 0.75, // the quality of the image, max is 1,\r\n      maxWidth: 1920, // the max width of the output image, defaults to 1920px\r\n      maxHeight: 1920, // the max height of the output image, defaults to 1920px\r\n      resize: options.resize !== undefined ? options.resize : false, // defaults to true, set false if you do not want to resize the image width and height\r\n    })\r\n    .then((data) => {\r\n      let newData = data.map((el) => ({\r\n        ...el,\r\n        dataWithPrefix: el.prefix + el.data,\r\n      }));\r\n      //   data[0].prefix + data[0].data\r\n      callBack(newData);\r\n      //   return [...data];\r\n    });\r\n};\r\n"],"sourceRoot":""}